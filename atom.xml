<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏宇的空间站</title>
  
  <subtitle>只是沙漠中的一艘小船罢了</subtitle>
  <link href="https://blog.natsuu.top/atom.xml" rel="self"/>
  
  <link href="https://blog.natsuu.top/"/>
  <updated>2024-04-06T04:08:23.836Z</updated>
  <id>https://blog.natsuu.top/</id>
  
  <author>
    <name>Natsuu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>（遥感）利用阿里云 AI Earth 进行野火风险性分析</title>
    <link href="https://blog.natsuu.top/2024/03/30/%E5%88%A9%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91AI%20Earth%E8%BF%9B%E8%A1%8C%E9%87%8E%E7%81%AB%E9%A3%8E%E9%99%A9%E6%80%A7%E5%88%86%E6%9E%90/"/>
    <id>https://blog.natsuu.top/2024/03/30/%E5%88%A9%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91AI%20Earth%E8%BF%9B%E8%A1%8C%E9%87%8E%E7%81%AB%E9%A3%8E%E9%99%A9%E6%80%A7%E5%88%86%E6%9E%90/</id>
    <published>2024-03-30T04:44:48.000Z</published>
    <updated>2024-04-06T04:08:23.836Z</updated>
    
    <content type="html"><![CDATA[<p><code>AI Earth</code> 是一个由阿里云提供支持的遥感算法开发和数据驱动科学平台。利用平台提供的 <code>Python SDK</code>，我们可以通过编写 Python 代码来实现对遥感数据的云端处理。平台既提供了在线 <code>Notebook</code> 环境，也支持直接在本地 <code>Jupyter Notebook</code> 编写代码。因为在本地编写更有利于对后续管理，所以本项目也采用了本地 <code>Jupyter Notebook</code> 编写的方式。</p><h1 id="配置准备"><a href="#配置准备" class="headerlink" title="配置准备"></a>配置准备</h1><h2 id="安装AI-Earth-Engine-SDK"><a href="#安装AI-Earth-Engine-SDK" class="headerlink" title="安装AI Earth Engine SDK"></a>安装 <code>AI Earth Engine SDK</code></h2><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python <span class="literal">-m</span> pip install <span class="literal">-U</span> <span class="string">"aie-sdk[engine]"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="注册阿里云账号"><a href="#注册阿里云账号" class="headerlink" title="注册阿里云账号"></a>注册阿里云账号</h2><p><a href="https://www.aliyun.com/minisite/goods?userCode=9k9dfqvv">阿里云・云小站</a></p><h2 id="获取鉴权信息"><a href="#获取鉴权信息" class="headerlink" title="获取鉴权信息"></a>获取鉴权信息</h2><p>根据不同的配置环境可以选择不同的<a href="https://engine-aiearth.aliyun.com/docs/page/api?d=07f36f#heading-22:~:text=%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81-,%E9%89%B4%E6%9D%83%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96,-%E6%82%A8%E5%8F%AF%E4%BB%A5%E5%9F%BA%E4%BA%8E">鉴权方式</a></p><ul><li>使用在线 <code>NoteBook</code> 环境：无须鉴权</li><li>使用本地模式，但是不需要长期有效：使用 token 鉴权</li><li>使用本地模式，但是希望鉴权长期有效：使用阿里云 AccessKey 鉴权</li><li>使用本地模式，但是希望使用 Aliyun STS 鉴权</li></ul><p><a href="https://engine-aiearth.aliyun.com/#/utility/auth-token">在 AI Earth 生成 token</a></p><h1 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h1><h2 id="鉴权"><a href="#鉴权" class="headerlink" title="鉴权"></a>鉴权</h2><p>选取对应的方式进行鉴权</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> aie</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在线NoteBook不需要填入参数</span></span><br><span class="line">aie.Authenticate()</span><br><span class="line"><span class="comment"># 使用token进行鉴权</span></span><br><span class="line">aie.Authenticate(token=<span class="string">'token'</span>)</span><br><span class="line"><span class="comment"># 使用 aliyun access_key_id进行鉴权</span></span><br><span class="line">aie.Authenticate(access_key_id=<span class="string">"*"</span>, access_key_secret=<span class="string">"*"</span>)</span><br><span class="line"><span class="comment"># 使用 aliyun RAM STS 进行鉴权(需要 aiearth-core&gt;=1.0.3)</span></span><br><span class="line">aie.Authenticate(access_key_id=<span class="string">'*'</span>, access_key_secret=<span class="string">'*'</span>, access_key_security_token=<span class="string">'*'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">aie.Initialize()</span><br></pre></td></tr></tbody></table></figure><h2 id="确定研究区域"><a href="#确定研究区域" class="headerlink" title="确定研究区域"></a>确定研究区域</h2><p>分别提取广西和广东的矢量边界并进行合并，然后在地图上表示出来。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">feature_collection_1 = aie.FeatureCollection(<span class="string">'China_Province'</span>) \</span><br><span class="line">                        .<span class="built_in">filter</span>(aie.Filter.eq(<span class="string">'province'</span>, <span class="string">'广西壮族自治区'</span>))</span><br><span class="line"></span><br><span class="line">feature_collection_2 = aie.FeatureCollection(<span class="string">'China_Province'</span>) \</span><br><span class="line">                        .<span class="built_in">filter</span>(aie.Filter.eq(<span class="string">'province'</span>, <span class="string">'广东省'</span>))</span><br><span class="line"></span><br><span class="line">union_fc = feature_collection_1.merge(feature_collection_2).union()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">union_geometry = union_fc.geometry()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span> = aie.Map(</span><br><span class="line">    center=union_fc.getCenter(),</span><br><span class="line">    height=<span class="number">800</span>,</span><br><span class="line">    zoom=<span class="number">6</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">vis_params = {</span><br><span class="line">    <span class="string">'color'</span>: <span class="string">'#00FF00'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>.addLayer(</span><br><span class="line">    union_fc,</span><br><span class="line">    vis_params,</span><br><span class="line">    <span class="string">'region'</span>,</span><br><span class="line">    bounds=union_fc.getBounds()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将边界导出到持久化数据空间中</span></span><br><span class="line"><span class="comment"># aie.Export.feature.toAsset(union_fc, "两广地区边界").start()</span></span><br></pre></td></tr></tbody></table></figure><p>AI Earth 提供了 <code>map</code> 方法用以渲染地图组件。将项目流程切分为 NoteBook 的多个 cell 可以让组件进行独立渲染，这将更方便我们观察每个步骤的结果。后续的步骤也将采用这样的方式。</p><h2 id="获取地物分类"><a href="#获取地物分类" class="headerlink" title="获取地物分类"></a>获取地物分类</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/ESA_WORLD_COVER_V200">https://engine-aiearth.aliyun.com/#/dataset/ESA_WORLD_COVER_V200</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调用数据集并筛选包含研究区域的部分</span></span><br><span class="line">dataset_classify = aie.ImageCollection(<span class="string">'ESA_WORLD_COVER_V200'</span>) \</span><br><span class="line">             .filterBounds(union_geometry) </span><br><span class="line"></span><br><span class="line">img_cover = dataset_classify.mosaic() \</span><br><span class="line">                            .clip(union_geometry) \</span><br><span class="line">                            .rename([<span class="string">"cover"</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后续的小节不会再展示map的配置</span></span><br><span class="line"><span class="built_in">map</span> = aie.Map(</span><br><span class="line">    center=union_fc.getCenter(),</span><br><span class="line">    height=<span class="number">800</span>,</span><br><span class="line">    zoom=<span class="number">6</span></span><br><span class="line">)</span><br><span class="line">vis_params = {</span><br><span class="line">    <span class="string">'SR_Bands'</span>: <span class="string">'cover'</span>,</span><br><span class="line">    <span class="string">'min'</span>: <span class="number">10.0</span>,</span><br><span class="line">    <span class="string">'max'</span>: <span class="number">100.0</span>,</span><br><span class="line">    <span class="string">'palette'</span>: [</span><br><span class="line">        <span class="string">'#006400'</span>,<span class="string">'#ffbb22'</span>,<span class="string">'#ffff4c'</span>,<span class="string">'#f096ff'</span>,</span><br><span class="line">        <span class="string">'#fa0000'</span>,<span class="string">'#b4b4b4'</span>,<span class="string">'#f0f0f0'</span>,<span class="string">'#0064c8'</span>,</span><br><span class="line">        <span class="string">'#0096a0'</span>,<span class="string">'#00cf75'</span>,<span class="string">'#fae6a0'</span></span><br><span class="line">    ]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>.addLayer(</span><br><span class="line">    img_cover,</span><br><span class="line">    vis_params,</span><br><span class="line">    <span class="string">'cover'</span>,</span><br><span class="line">    bounds=union_fc.getBounds()</span><br><span class="line">)</span><br><span class="line"><span class="built_in">map</span>                </span><br></pre></td></tr></tbody></table></figure><p>栅格数据的处理方式大同小异，故下文只展示各种数据需要特别处理的地方。</p><h2 id="获取历史火灾数据集"><a href="#获取历史火灾数据集" class="headerlink" title="获取历史火灾数据集"></a>获取历史火灾数据集</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/MODIS_MCD64A1_006">https://engine-aiearth.aliyun.com/#/dataset/MODIS_MCD64A1_006</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 选择近十年来发生过火灾的区域</span></span><br><span class="line">dataset_firepoint = aie.ImageCollection(<span class="string">'MODIS_MCD64A1_006'</span>) </span><br><span class="line">                        .filterDate(<span class="string">'2012-01-01'</span>, <span class="string">'2022-12-31'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用or运算提取所有火点然</span></span><br><span class="line"><span class="comment"># 用mask来为nodata填0</span></span><br><span class="line"><span class="comment"># 裁切对象并重命名</span></span><br><span class="line">img_firepoint = dataset_firepoint.select([<span class="string">'BurnDate'</span>]).Or() \</span><br><span class="line">                            .mask() \</span><br><span class="line">                            .clip(union_geometry) \</span><br><span class="line">                            .rename([<span class="string">"firepoint"</span>])</span><br></pre></td></tr></tbody></table></figure><h2 id="计算坡度坡向"><a href="#计算坡度坡向" class="headerlink" title="计算坡度坡向"></a>计算坡度坡向</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/Copernicus_DEM_30M">https://engine-aiearth.aliyun.com/#/dataset/Copernicus_DEM_30M</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算坡度和坡向</span></span><br><span class="line">img_slope = aie.Terrain.slope(img_DEM).rename([<span class="string">"slope"</span>])</span><br><span class="line">img_aspect = aie.Terrain.aspect(img_DEM).rename([<span class="string">"aspect"</span>])</span><br></pre></td></tr></tbody></table></figure><h2 id="生物气候变量"><a href="#生物气候变量" class="headerlink" title="生物气候变量"></a>生物气候变量</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/ERA5_LAND_MONTHLY">https://engine-aiearth.aliyun.com/#/dataset/ERA5_LAND_MONTHLY</a></p><p>该数据集的各个波段有不同的含义，我们只需提取要用的内容</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 平均2m温度             </span></span><br><span class="line">dataset_avg_temp = dataset_Bioclimatic.select([<span class="string">'temperature_2m'</span>])</span><br><span class="line">img_avg_temp = dataset_avg_temp.mean().clip(union_geometry).rename([<span class="string">"avg_temp"</span>])</span><br><span class="line"><span class="comment"># 平均地表温度</span></span><br><span class="line">dataset_skin_avg_temp = dataset_Bioclimatic.select([<span class="string">'skin_temperature'</span>])</span><br><span class="line">img_skin_avg_temp = dataset_skin_avg_temp.mean().clip(union_geometry).rename([<span class="string">"skin_avg_temp"</span>])</span><br><span class="line"><span class="comment"># 平均气压</span></span><br><span class="line">dataset_surface_pressure = dataset_Bioclimatic.select([<span class="string">'surface_pressure'</span>])</span><br><span class="line">img_surface_pressure = dataset_surface_pressure.mean().clip(union_geometry).rename([<span class="string">"surface_pressure"</span>])</span><br><span class="line"><span class="comment"># 年降水量</span></span><br><span class="line">dataset_precipitation = dataset_Bioclimatic.select([<span class="string">'total_precipitation'</span>])</span><br><span class="line">img_precipitation = dataset_precipitation.<span class="built_in">sum</span>().clip(union_geometry).rename([<span class="string">"precipitation"</span>])</span><br><span class="line"><span class="comment"># 年蒸发量</span></span><br><span class="line">dataset_evaporation = dataset_Bioclimatic.select([<span class="string">'total_evaporation'</span>])</span><br><span class="line">img_evaporation = dataset_evaporation.<span class="built_in">sum</span>().clip(union_geometry).rename([<span class="string">"evaporation"</span>])</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="WET"><a href="#WET" class="headerlink" title="WET"></a>WET</h2><p>利用 Landsat9 的数据计算湿度指标</p><p>使用的数据集：<a href="https://engine-aiearth.aliyun.com/#/dataset/LANDSAT_LC09_C02_T1_L1">https://engine-aiearth.aliyun.com/#/dataset/LANDSAT_LC09_C02_T1_L1</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">dataset = aie.ImageCollection(<span class="string">'LANDSAT_LC09_C02_T1_L1'</span>) \</span><br><span class="line">             .filterBounds(union_fc) \</span><br><span class="line">             .filterDate(<span class="string">'2021-01-01'</span>, <span class="string">'2022-12-31'</span>) \</span><br><span class="line">             .<span class="built_in">filter</span>(aie.Filter.lte(<span class="string">'eo:cloud_cover'</span>, <span class="number">30.0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去云函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">removeLandsatCloud</span>(<span class="params">image</span>):</span><br><span class="line">    <span class="comment"># cloudShadowBitMask = (1 &lt;&lt; 4)</span></span><br><span class="line">    cloudsBitMask = (<span class="number">1</span> &lt;&lt; <span class="number">3</span>)</span><br><span class="line">    qa = image.select(<span class="string">'QA_PIXEL'</span>)</span><br><span class="line">    mask = qa.bitwiseAnd(aie.Image(cloudsBitMask)).eq(aie.Image(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">return</span> image.updateMask(mask)</span><br><span class="line">    </span><br><span class="line">images_no_cloud = dataset.<span class="built_in">map</span>(removeLandsatCloud)</span><br><span class="line"></span><br><span class="line">image_L9C2L2 = images_no_cloud.mosaic().clip(union_geometry)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于Landsat9</span></span><br><span class="line"><span class="comment"># WET = 0.1511 B1 + 0.1973 B2 + 0.3283 B3 + 0.3407 B4 - 0.7171 B5 - 0.4559 B6</span></span><br><span class="line">img_wet = image_L9C2L2.select(<span class="string">'B2'</span>).multiply(aie.Image(<span class="number">0.1511</span>)) \</span><br><span class="line">    .add(image_L9C2L2.select(<span class="string">'B3'</span>).multiply(aie.Image(<span class="number">0.1973</span>))) \</span><br><span class="line">    .add(image_L9C2L2.select(<span class="string">'B4'</span>).multiply(aie.Image(<span class="number">0.3283</span>))) \</span><br><span class="line">    .add(image_L9C2L2.select(<span class="string">'B5'</span>).multiply(aie.Image(<span class="number">0.3407</span>))) \</span><br><span class="line">    .add(image_L9C2L2.select(<span class="string">'B6'</span>).multiply(aie.Image(<span class="number">0.7171</span>))) \</span><br><span class="line">    .add(image_L9C2L2.select(<span class="string">'B7'</span>).multiply(aie.Image(<span class="number">0.4559</span>))) \</span><br><span class="line">    .rename([<span class="string">"wet"</span>])</span><br></pre></td></tr></tbody></table></figure><h2 id="土壤分类"><a href="#土壤分类" class="headerlink" title="土壤分类"></a>土壤分类</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/OPENLANDMAP_SOL_SOL_TEXTURE-CLASS_USDA-TT_M_V02">https://engine-aiearth.aliyun.com/#/dataset/OPENLANDMAP_SOL_SOL_TEXTURE-CLASS_USDA-TT_M_V02</a></p><p>过程：略</p><h2 id="NDVI"><a href="#NDVI" class="headerlink" title="NDVI"></a>NDVI</h2><p>使用的数据集： <a href="https://engine-aiearth.aliyun.com/#/dataset/MODIS_MOD13Q1_006">https://engine-aiearth.aliyun.com/#/dataset/MODIS_MOD13Q1_006</a><br>过程：略</p><h1 id="使用自适应分类器"><a href="#使用自适应分类器" class="headerlink" title="使用自适应分类器"></a>使用自适应分类器</h1><h2 id="划分数据"><a href="#划分数据" class="headerlink" title="划分数据"></a>划分数据</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">img_all = img_firepoint.addBands(img_aspect) \</span><br><span class="line">                        .addBands(img_slope) \</span><br><span class="line">                        .addBands(img_DEM)  \</span><br><span class="line">                        .addBands(img_precipitation) \</span><br><span class="line">                        .addBands(img_cover) \</span><br><span class="line">                        .addBands(img_soil) \</span><br><span class="line">                        .addBands(img_surface_pressure) \</span><br><span class="line">                        .addBands(img_avg_temp) \</span><br><span class="line">                        .addBands(img_ndvi) \</span><br><span class="line">                        .addBands(img_evaporation) \</span><br><span class="line">                        .addBands(img_wet) \</span><br><span class="line">                        .clip(union_geometry)</span><br><span class="line">                        </span><br><span class="line"><span class="comment"># 从指定范围内取样</span></span><br><span class="line">samples = img_all.sampleRegion(union_geometry, <span class="number">800</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在训练样本中增加一列随机数, 选取80%的样本为训练样本, 选取20%的样本为验证样本</span></span><br><span class="line">sample = samples.randomColumn()</span><br><span class="line">training_sample = sample.<span class="built_in">filter</span>(aie.Filter.lte(<span class="string">'random'</span>, <span class="number">0.80</span>))</span><br><span class="line">validation_sample = sample.<span class="built_in">filter</span>(aie.Filter.gt(<span class="string">'random'</span>, <span class="number">0.80</span>))</span><br></pre></td></tr></tbody></table></figure><h2 id="使用自适应分类器-1"><a href="#使用自适应分类器-1" class="headerlink" title="使用自适应分类器"></a>使用自适应分类器</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建自适应集成分类器，并进行训练</span></span><br><span class="line">trained_classifier = aie.Classifier.adaBoost(<span class="number">10</span>)</span><br><span class="line">trained_classifier = trained_classifier.train(training_sample, </span><br><span class="line">                                                <span class="string">"firpoint"</span>, </span><br><span class="line">                                                img_all.bandNames().getInfo())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取训练样本的混淆矩阵, 并对训练精度进行评估</span></span><br><span class="line">train_accuracy = trained_classifier.confusionMatrix()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Training error matrix:'</span>, train_accuracy.getInfo())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Training overall accuracy:'</span>, train_accuracy.accuracy().getInfo())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用验证集对分类器进行评估</span></span><br><span class="line">validation = validation_sample.classify(trained_classifier)</span><br><span class="line">validation_accuracy = validation.errorMatrix(label, <span class="string">'classification'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Validation error matrix:'</span>, validation_accuracy.getInfo())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Validation accuracy:'</span>, validation_accuracy.accuracy().getInfo())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用训练好的分类器对影像进行分类</span></span><br><span class="line">img_classified = img_all.classify(trained_classifier)</span><br></pre></td></tr></tbody></table></figure><h2 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(img_classified.getInfo())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span> = aie.Map(</span><br><span class="line">    center=union_fc.getCenter(),</span><br><span class="line">    height=<span class="number">800</span>,</span><br><span class="line">    zoom=<span class="number">6</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">map</span>.addLayer(</span><br><span class="line">    img_classified,</span><br><span class="line">    {</span><br><span class="line">        <span class="string">'min'</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">'max'</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">'palette'</span>: [<span class="string">"0,255,255"</span>,<span class="string">"255,0,0"</span>]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">'aie_classification'</span>,</span><br><span class="line">    bounds=union_fc.getBounds()</span><br><span class="line">)</span><br><span class="line"><span class="built_in">map</span></span><br></pre></td></tr></tbody></table></figure><h1 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h1><p>为了节省调试实践，我在做这个项目的时候封装了一些函数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 渲染地图前自动获取栅格数据的最大值和最小值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_max_and_min</span>(<span class="params">img_target:aie.Image,region:aie.Geometry=union_geometry</span>):</span><br><span class="line">    reducer = aie.Reducer.<span class="built_in">max</span>().combine(reducer2=aie.Reducer.<span class="built_in">min</span>(), sharedInputs=<span class="literal">True</span>)</span><br><span class="line">    result = img_target.reduceRegion(reducer, region)</span><br><span class="line">    <span class="built_in">max</span>,<span class="built_in">min</span> = <span class="built_in">list</span>(result.getInfo().values())</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>,<span class="built_in">min</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用平均值来填充nodata</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fix_with_mean</span>(<span class="params">img_target:aie.Image,region:aie.Geometry=union_geometry</span>):</span><br><span class="line">    reducer = aie.Reducer.mean()</span><br><span class="line">    result = img_target.reduceRegion(reducer, union_geometry)</span><br><span class="line"></span><br><span class="line">    mean_tag = <span class="built_in">list</span>(result.getInfo().keys())[<span class="number">0</span>]</span><br><span class="line">    target_mean = result.getInfo()[mean_tag] </span><br><span class="line">    </span><br><span class="line">    img_mean = aie.Image(target_mean).clip(union_geometry)</span><br><span class="line">    img_target = img_target.unmask(img_mean)</span><br><span class="line">    img_target = img_target.updateMask(img_target.mask())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> img_target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据导出到持久化空间</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save</span>(<span class="params">img_target:aie.Image, filename:<span class="built_in">str</span>=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> filename <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        filename = img_target.bandNames().getInfo()[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果不按原分辨率导出的话会有明显的裂缝</span></span><br><span class="line">    <span class="comment"># 所以在不知道分辨率的情况下要手动计算</span></span><br><span class="line">    reducer = aie.Reducer.<span class="built_in">min</span>()</span><br><span class="line">    result = img_target.pixelArea().reduceRegion(reducer, union_geometry)</span><br><span class="line">    area = sqrt(result.getInfo()[<span class="string">'area_min'</span>])</span><br><span class="line">    </span><br><span class="line">    name = img_target.bandNames().getInfo()[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(name + <span class="string">":"</span> + <span class="built_in">str</span>(area))</span><br><span class="line"></span><br><span class="line">    aie.Export.image.toAsset(img_target, filename, area).start()</span><br></pre></td></tr></tbody></table></figure><h1 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h1><p>阿里云 AI Earth： <a href="https://engine-aiearth.aliyun.com/#/">https://engine-aiearth.aliyun.com/#/</a></p><p>利用 AI Earth 给 Landsat9 数据去云： <a href="https://engine-aiearth.aliyun.com/docs/page/case?d=6cf4e8">https://engine-aiearth.aliyun.com/docs/page/case?d=6cf4e8</a></p><p>WET 湿度指数计算： <a href="http://www.yndxxb.ynu.edu.cn/yndxxbzrkxb/article/doi/10.7540/j.ynu.20190174?viewType=HTML">http://www.yndxxb.ynu.edu.cn/yndxxbzrkxb/article/doi/10.7540/j.ynu.20190174?viewType=HTML</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;AI Earth&lt;/code&gt; 是一个由阿里云提供支持的遥感算法开发和数据驱动科学平台。利用平台提供的 &lt;code&gt;Python SDK&lt;/code&gt;，我们可以通过编写 Python 代码来实现对遥感数据的云端处理。平台既提供了在线 &lt;code&gt;Notebook</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="踩坑" scheme="https://blog.natsuu.top/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="遥感" scheme="https://blog.natsuu.top/tags/%E9%81%A5%E6%84%9F/"/>
    
    <category term="Python" scheme="https://blog.natsuu.top/tags/Python/"/>
    
    <category term="阿里云" scheme="https://blog.natsuu.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>（Python）基于 MAA 的明日方舟自动化脚本</title>
    <link href="https://blog.natsuu.top/2023/08/22/%E5%9F%BA%E4%BA%8EMAA%E7%9A%84%E8%87%AA%E5%8A%A8%E8%82%9D%E6%B8%B8%E6%88%8F%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.natsuu.top/2023/08/22/%E5%9F%BA%E4%BA%8EMAA%E7%9A%84%E8%87%AA%E5%8A%A8%E8%82%9D%E6%B8%B8%E6%88%8F%E8%84%9A%E6%9C%AC/</id>
    <published>2023-08-21T17:02:36.000Z</published>
    <updated>2024-04-06T04:08:23.836Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是MAA"><a href="#什么是MAA" class="headerlink" title="什么是MAA"></a>什么是 MAA</h1><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights">Meo Assistant Arknights</a>（现改名为 Maa Assistant Arknights）是一款由 <a href="https://github.com/MistEO">MistEO</a> 制作的基于<strong>图像识别</strong>技术，可以一键完成全部日常任务的明日方舟游戏小助手！</p><img src="https://s2.loli.net/2023/08/22/3nq7EP9YQOmlJLW.png" alt="MAA GUI" style="zoom: 33%;"><p><code>MAA</code> 已经封装了简单易用的<a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/tree/dev/src">接口</a>，我们可以通过查看附带的范例和阅读<a href="https://maa.plus/docs/3.1-%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.html">集成文档</a>中的介绍可以进一步了解它的工作方式。</p><h1 id="Python初调试"><a href="#Python初调试" class="headerlink" title="Python初调试"></a>Python 初调试</h1><p>安装好 <code>MAA</code> 后目录内已经附带了一个 Python 的 demo，一般是在这个位置。</p><blockquote><p>MAA\Python\sample.py</p></blockquote><p>ps: 为了保险起见，个人建议最好还是先在外面通过 <code>MAA.exe</code> 直接启动 GUI 检查 <code>MAA</code> 是否能正常正常工作再开始脚本调试。</p><p>打开脚本后进行初配置。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请设置为存放 dll 文件及资源的路径</span></span><br><span class="line">path = pathlib.Path(__file__).parent.parent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置更新器的路径和目标版本并更新</span></span><br><span class="line">Updater(path, Version.Stable).update()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外服需要再额外传入增量资源路径，例如</span></span><br><span class="line"><span class="comment"># incremental_path=path / 'resource' / 'global' / 'YoStarEN'</span></span><br><span class="line">Asst.load(path=path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若需要获取详细执行信息，请传入 callback 参数</span></span><br><span class="line"><span class="comment"># 例如 asst = Asst(callback=my_callback)</span></span><br><span class="line">asst = Asst()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置额外配置</span></span><br><span class="line"><span class="comment"># 触控方案配置</span></span><br><span class="line">asst.set_instance_option(InstanceOptionType.touch_type, <span class="string">'maatouch'</span>)</span><br><span class="line"><span class="comment"># 暂停下干员</span></span><br><span class="line"><span class="comment"># asst.set_instance_option(InstanceOptionType.deployment_with_pause, '1')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动模拟器。例如启动蓝叠模拟器的多开Pie64_1，并等待30s</span></span><br><span class="line">Bluestacks.launch_emulator_win(<span class="string">r'C:\Program Files\BlueStacks_nxt\HD-Player.exe'</span>, <span class="number">30</span>, <span class="string">"Pie64_1"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Hyper-v蓝叠的adb port</span></span><br><span class="line"><span class="comment"># port = Bluestacks.get_hyperv_port(r"C:\ProgramData\BlueStacks_nxt\bluestacks.conf", "Pie64_1")</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请自行配置 adb 环境变量，或修改为 adb 可执行程序的路径</span></span><br><span class="line"><span class="keyword">if</span> asst.connect(<span class="string">'adb.exe'</span>, <span class="string">'127.0.0.1:5555'</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'连接成功'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'连接失败'</span>)</span><br><span class="line">    exit()</span><br></pre></td></tr></tbody></table></figure><p>这部分除了<code>模拟器启动参数</code>和 <code>adb环境变量</code>需要检查外，其他地方如果没有特殊需求可以不用动。<em>（脚本如果要移动到位置记得改 <code>dll path</code>）</em></p><p>然后是下面就是一组添加到任务列表的结构。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">asst.append_task(AsstHandle handle, const char* <span class="built_in">type</span>, const char* params)</span><br><span class="line"></span><br><span class="line">asst.append_task(...)</span><br><span class="line">asst.append_task(...)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">asst.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> asst.running():</span><br><span class="line">    time.sleep(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># AsstHandle handle</span></span><br><span class="line"><span class="comment"># 实例句柄</span></span><br><span class="line"><span class="comment"># const char* type</span></span><br><span class="line"><span class="comment"># 任务类型</span></span><br><span class="line"><span class="comment"># const char* params</span></span><br><span class="line"><span class="comment"># 任务参数，json string</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回值：AsstTaskId</span></span><br><span class="line"><span class="comment"># 若添加成功，返回该任务 ID, 可用于后续设置任务参数；</span></span><br><span class="line"><span class="comment"># 若添加失败，返回 0</span></span><br></pre></td></tr></tbody></table></figure><p>为了方便理解，此处展示的是接口原型。在 demo 中已经写好了<code>一键长草</code>的任务流程，初调试的时候不用动。改造的流程后面会介绍，现在只要确定整个流程能正常执行就可以了。</p><p>一切准备就绪直接启动运行</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sample.py</span><br></pre></td></tr></tbody></table></figure><p><strong>（为保证资源正常释放，中止程序运行会连带关闭模拟器！）</strong></p><p>不出意外的话能跑通整个流程的话就可以开始根据自己的需求修改脚本了。</p><h1 id="魔改思路"><a href="#魔改思路" class="headerlink" title="魔改思路"></a>魔改思路</h1><p>在前面加个判断，这样写还能在模拟器已经开启时节省时间，还能解决模拟器连不上这种小概率事件，</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> asst.connect(<span class="string">'adb.exe'</span>, <span class="string">'127.0.0.1:5555'</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'没有检测到可用的连接！正在尝试启动模拟器……'</span>)</span><br><span class="line">    Bluestacks.launch_emulator_win(<span class="string">r'C:\Program Files\BlueStacks_nxt\HD-Player.exe'</span>, <span class="number">10</span>, <span class="string">"Pie64_1"</span>)</span><br><span class="line">    port = Bluestacks.get_hyperv_port(<span class="string">r"C:\ProgramData\BlueStacks_nxt\bluestacks.conf"</span>, <span class="string">"Pie64_1"</span>)        </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'连接成功'</span>)</span><br></pre></td></tr></tbody></table></figure><p>因为我只在<code>官服</code>和 <code>B服</code>各有一个号，所以只需要遍历添加每个任务，不涉及模拟器多开。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">servers = [<span class="string">"Official"</span>,<span class="string">"Bilibili"</span>]</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> select_server <span class="keyword">in</span> servers:</span><br><span class="line">    asst.append_task(<span class="string">'StartUp'</span>,{</span><br><span class="line">        <span class="string">"client_type"</span>: select_server,</span><br><span class="line">        <span class="string">"start_game_enabled"</span>: <span class="literal">True</span></span><br><span class="line">    })</span><br><span class="line">    asst.append_task(...)</span><br><span class="line">    asst.append_task(...)</span><br></pre></td></tr></tbody></table></figure><p>为了方便使用，这里按时间给刷体力任务配置不同的参数。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">weekday = time.localtime(time.time()).tm_wday</span><br><span class="line">weekday_str = [<span class="string">"周一"</span>, <span class="string">"周二"</span>, <span class="string">"周三"</span>, <span class="string">"周四"</span>, <span class="string">"周五"</span>, <span class="string">"周六"</span>, <span class="string">"周日"</span>][weekday]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"今天是{}"</span>.<span class="built_in">format</span>(weekday_str))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 肝活动</span></span><br><span class="line">campaign = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 钱本开放日</span></span><br><span class="line">money = [<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line">money_campain = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先判断是否要肝活动</span></span><br><span class="line"><span class="keyword">if</span> campaign:</span><br><span class="line">    fight_config = {</span><br><span class="line">        <span class="comment"># 留空为继续刷上次的关卡</span></span><br><span class="line">        <span class="string">'stage'</span>: <span class="string">'SL-7'</span>,</span><br><span class="line">        <span class="string">'expiring_medicine'</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="string">'report_to_penguin'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="comment"># 'penguin_id': '1234567'</span></span><br><span class="line">    }</span><br><span class="line"><span class="keyword">elif</span> weekday == <span class="number">1</span>:</span><br><span class="line">    fight_config = {</span><br><span class="line">        <span class="comment"># 剿灭</span></span><br><span class="line">        <span class="string">'stage'</span>: <span class="string">'Annihilation'</span>,</span><br><span class="line">        <span class="string">'expiring_medicine'</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="string">'report_to_penguin'</span>: <span class="literal">True</span>,</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">elif</span> weekday <span class="keyword">in</span> money <span class="keyword">or</span> money_campain:</span><br><span class="line">    fight_config = {</span><br><span class="line">        <span class="string">'stage'</span>: <span class="string">'CE-6'</span>,</span><br><span class="line">        <span class="string">'expiring_medicine'</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="string">'report_to_penguin'</span>: <span class="literal">True</span>,</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    fight_config = {</span><br><span class="line">        <span class="comment"># 其他时间都去刷狗粮本</span></span><br><span class="line">        <span class="string">'stage'</span>: <span class="string">'LS-6'</span>,</span><br><span class="line">        <span class="string">'expiring_medicine'</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="string">'report_to_penguin'</span>: <span class="literal">True</span>,</span><br><span class="line">    }           </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">asst.append_task(<span class="string">'Fight'</span>,fight_config)</span><br></pre></td></tr></tbody></table></figure><p>在改到这个地方的时候有一个插曲。我在文档里没有找到剿灭任务的参数，只看见<code>请参考 C# 集成示例</code>这段话。可是这个东西在哪是完全不知道的，因为仓库里的集成示例只有 C、Python、Golang、Dart、Java、Java HTTP、Rust、TypeScript 根本没有 C# ！</p><img src="https://s2.loli.net/2023/08/22/z2sGPtuvABbqdQJ.jpg"><p>既然没有那就只能自己找解决方法了。经过检索后发现，由于项目重构，这部分内容现在已经不存在了。但是好消息是，我又在这个项目的其他位置找到了其他可以替代这部分的文档。于是更新了这里的指引说明 pr 上去了。（最后一节会展开说说这里）</p><p><del>简繁日英的文档改起来还是比较容易的，但是韩语我是真的一点都看不懂，这一块还是留给大佬吧。</del></p><p>把脚本改完之后尝试运行一次，没问题的话就可以添加到定时计划中了。</p><h1 id="添加到定时计划任务"><a href="#添加到定时计划任务" class="headerlink" title="添加到定时计划任务"></a>添加到定时计划任务</h1><p>直接在 <code>windows</code> 搜索框找到并打开任务计划程序<br>。<br><img src="https://s2.loli.net/2023/08/23/oDlsJaRqEOSK1PH.png" alt="任务计划程序" style="zoom: 20%;"></p><p>选择创建基本任务，配置任务描述和触发条件。在<code>启动程序</code>内填入 <code>Python</code> 的绝对路径，在<code>参数</code>内填入脚本的绝对路径和其他附加参数（没有特殊需求的可以不用填附加参数）。</p><img src="https://s2.loli.net/2023/08/23/Us9KOl1pCocFtzr.png" style="zoom: 30%;"><p>完成之后就 MAA 就能自动按计划执行任务了。</p><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><p>其实在更改文档的时候又遇到了插曲的小插曲。在操作系统环境设定成选择不同的语言时，系统会变更默认使用的编码方案，导致<strong>相同的字</strong>打印出来的样子是<strong>不同的</strong>。举例来说就是同样是使用汉字的国家在简化繁体字选择的途径不一样，导致了在不同编码中某些看起来 “一样” 的字实际上用的是完全不同的机内码。大家可以把系统的语言设定分别调成 <code>zh-CN</code>、<code>zh-TW</code>、<code>zh-SG</code>、<code>zh-HK</code>，然后放大仔细观察一下文字的细节，就会发现这个问题真正麻烦的地方是，它并不可以直接通过更换字体或者更换输入法就可以解决的！</p><p>庆幸的是这次要修改的文档内容不是很多，而且大多都有可以参考的内容，只需要将别处的文字复制过来。在拼接的时候有一个很重要的细节是需要注意的，对 <code>zh-TW</code> 的处理并不是直接把简体字的内容直接转为繁体字就好了，而是要使用更符合地方语言习惯的语义用词去描述对应的内容，在复制的时候也要尽量采用之前的编辑者使用的措辞。</p><div class="hide-block"><button type="button" class="hide-button" style="">还有一些碎碎念    </button><div class="hide-content"><p>我真的很好奇，在维护日语文档的到底都有几批人，两个段落能看见三种不同语言的逗号和四种不同风格的引号。</p></div></div><p>相关链接：</p><p>MAA repo：<a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights">https://github.com/MaaAssistantArknights/MaaAssistantArknights</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是MAA&quot;&gt;&lt;a href=&quot;#什么是MAA&quot; class=&quot;headerlink&quot; title=&quot;什么是MAA&quot;&gt;&lt;/a&gt;什么是 MAA&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/MaaAssistantArknights/Maa</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="Python" scheme="https://blog.natsuu.top/tags/Python/"/>
    
    <category term="脚本" scheme="https://blog.natsuu.top/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>（遥感）利用 Sentinel 卫星影像数据研究某市地震引发的地表形变</title>
    <link href="https://blog.natsuu.top/2023/07/30/%E5%88%A9%E7%94%A8Sentinel%E5%8D%AB%E6%98%9F%E5%BD%B1%E5%83%8F%E6%95%B0%E6%8D%AE%E7%A0%94%E7%A9%B6%E5%9C%B0%E9%9C%87%E5%89%8D%E5%90%8E%E7%9A%84%E5%9C%B0%E8%A1%A8%E5%BD%A2%E5%8F%98/"/>
    <id>https://blog.natsuu.top/2023/07/30/%E5%88%A9%E7%94%A8Sentinel%E5%8D%AB%E6%98%9F%E5%BD%B1%E5%83%8F%E6%95%B0%E6%8D%AE%E7%A0%94%E7%A9%B6%E5%9C%B0%E9%9C%87%E5%89%8D%E5%90%8E%E7%9A%84%E5%9C%B0%E8%A1%A8%E5%BD%A2%E5%8F%98/</id>
    <published>2023-07-30T10:50:23.000Z</published>
    <updated>2024-04-25T15:56:07.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情概要"><a href="#前情概要" class="headerlink" title="前情概要"></a>前情概要</h1><p>据中国地震台网正式测定：07 月 03 日 20 时 57 分某市发生 3.7 级地震，震源深度 9 千米。某分析小组将用遥感卫星影像数据分析地震前后地表发生的形变。</p><h1 id="检查-SARscape-在-ENVI-中的配置"><a href="#检查-SARscape-在-ENVI-中的配置" class="headerlink" title="检查 SARscape 在 ENVI 中的配置"></a>检查 SARscape 在 ENVI 中的配置</h1><ol><li>安装 ENVI 以及 SARscape 扩展</li><li>下载研究地区对应时段的 Sentinel 卫星影像和 DEM</li><li> 检查 SARscape 在 ENVI 中的配置</li><li>有条件的话还可以准备 GPC 文件，但它不是必须的</li></ol><p><img src="https://s2.loli.net/2023/07/30/ERYpJxrebGSFH7u.png" alt="pre_common"></p><p>设置内存占用限制，检查 OpenCL 硬件加速的配置情况， <del>我这里没有独显就只开了核显</del> 。</p><p><img src="https://s2.loli.net/2023/07/30/m6bI1uSksQCvGHN.png"></p><p>应用 ENVI 自带的 Sentinel 参数设置</p><h1 id="加载-Sentinel-卫星影像"><a href="#加载-Sentinel-卫星影像" class="headerlink" title="加载 Sentinel 卫星影像"></a>加载 Sentinel 卫星影像</h1><p><img src="https://s2.loli.net/2023/07/30/95lYTSQ3jawsUNg.png"></p><p>依次导入所有影像，选择统一输出的目录，点击 <code>Exec</code> 开始读取。</p><p><img src="https://s2.loli.net/2023/07/30/F3clL2kHJCK5u4p.png"></p><p>（SARscape 默认为每个步骤的输出文件重命名为 <code>原文件名</code> 加 <code>特定后缀</code> ，有特殊需求可以在 <code>Parameters</code> 里更改。）</p><h1 id="基线估算"><a href="#基线估算" class="headerlink" title="基线估算"></a>基线估算</h1><p>打开基线估算</p><blockquote><p>/SARscape/Interferometry/Interferometric Tools/Baseline Estimation</p></blockquote><p><img src="https://s2.loli.net/2023/07/30/XkhLMgW8SQ6vdHB.png"></p><p>输入主从影像的 <code>_list</code> 文件，点击 <code>Exec</code> 开始执行。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Normal Baseline (m) = -40.038Critical Baseline min - max(m) = [-6475.240] - [6475.240]</span><br><span class="line">Range Shift (pixels)    = 16.016</span><br><span class="line">Azimuth Shift (pixels)  = -13414.929</span><br><span class="line">Slant Range Distance (m)  = 880579.036</span><br><span class="line">Absolute Time Baseline (Days) = 12</span><br><span class="line">Doppler Centroid diff. (Hz) = 4901.873Critical min-max (Hz) = [-486.486] - [486.486]</span><br><span class="line">2 PI Ambiguity height (InSAR) (m) = 390.992</span><br><span class="line">2 PI Ambiguity displacement (DInSAR) (m) = 0.028</span><br><span class="line">1 Pixel Shift Ambiguity height (Stereo Radargrammetry) (m) = 32843.320</span><br><span class="line">1 Pixel Shift Ambiguity displacement (Amplitude Tracking) (m) = 2.330</span><br><span class="line">Master Incidence Angle = 39.869Absolute Incidence Angle difference = 0.003</span><br><span class="line">Pair potentially suited for Interferometry, check the precision plot</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>基线估算的结果显示，这两景数据的空间基线为 <code>-40.038</code> 米，位于临界基线 <code>±6475.240</code> 米之内，时间基线 <code>12</code> 天，做 DInSAR 的一个相位变化周期代表的地形变化为 <code>0.028</code> 米。</p><h1 id="DInSAR-Displacement-WorkFlow-工作流"><a href="#DInSAR-Displacement-WorkFlow-工作流" class="headerlink" title="DInSAR Displacement WorkFlow 工作流"></a>DInSAR Displacement WorkFlow 工作流</h1><p>打开 DInSAR Displacement WorkFlow 工作流。</p><blockquote><p>/SARscape/Interferometry/DInSAR Displacement Workflow</p></blockquote><p><img src="https://s2.loli.net/2023/07/30/EoUhy6XV35TSlem.png"></p><p>选择主从影像，引用 DEM 。 </p><p><em>（没有准备 DEM 可以在 Toolbox/SARscape/General Tools/DEM Extraction/SRTM-3 Version 4 里下载 ）</em></p><p><img src="https://s2.loli.net/2023/07/30/wGUaZ5ne7vdLt6l.png"></p><p>左侧的选项栏可以直接调整每个步骤的参数，调完所有的之后再启动可以无人值守跑完整个流程。</p><p><strong>注意不要点到 <code>Next</code> 去了</strong>，调一步走一步会很浪费时间！</p><p><img src="https://s2.loli.net/2023/07/30/DjhSVgFCvHriZAX.png"></p><p>如果你的影像分辨率很高，就在左侧的选项栏找到 <code>Adaptive Filter and Coherenace Generation</code> 使用对高分辨率影像更友好算法。（分辨率不到 5 米的可以跳过这步）</p><p>有准备的数据有控制点文件可以在这里导入，没有控制点对这次试验这次实验影响也不大。</p><p>如果没有什么其他特殊需求的话其他的地方，其他参数就都按自动填写的默认值就好了。</p><p><img src="https://s2.loli.net/2023/07/30/FxG9Jz7ApNBZhra.png"></p><p>都调完了后就在 <code>Output</code> 选择结果文件额的输出路径。</p><p>然后回到 <code>Input</code> 直接点 <code>NEXT &gt;&gt;&gt;</code> 开始任务。<del>接下来就是在去菜市路上想想今晚该吃什么了</del></p><p>我的高精度影像数据在工作站满载跑了一个晚上才跑完，所以配置比较差的朋友可能要注意合理安排时间。</p><blockquote><p>附配置单<br>E5 2666v3 * 2<br>1080 Ti * 1<br>96 GB DDR4<br>1TB SSD</p></blockquote><h1 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h1><p>图中可以看到，颜色越红的区域就是影响越大的区域。</p><p><img src="https://s2.loli.net/2023/07/30/FxG9Jz7ApNBZhra.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情概要&quot;&gt;&lt;a href=&quot;#前情概要&quot; class=&quot;headerlink&quot; title=&quot;前情概要&quot;&gt;&lt;/a&gt;前情概要&lt;/h1&gt;&lt;p&gt;据中国地震台网正式测定：07 月 03 日 20 时 57 分某市发生 3.7 级地震，震源深度 9 千米。某分析小组将用遥</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="遥感" scheme="https://blog.natsuu.top/tags/%E9%81%A5%E6%84%9F/"/>
    
    <category term="ENVI" scheme="https://blog.natsuu.top/tags/ENVI/"/>
    
  </entry>
  
  <entry>
    <title>（年度总结）2022 里发生的那点事</title>
    <link href="https://blog.natsuu.top/2022/12/30/2022%E9%87%8C%E5%8F%91%E7%94%9F%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>https://blog.natsuu.top/2022/12/30/2022%E9%87%8C%E5%8F%91%E7%94%9F%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/</id>
    <published>2022-12-30T13:09:44.000Z</published>
    <updated>2024-04-06T04:08:23.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="折腾总结"><a href="#折腾总结" class="headerlink" title="折腾总结"></a>折腾总结</h1><p>（小声：瑞幸的长椅靠背坐着真难受）</p><h2 id="写文章的总结"><a href="#写文章的总结" class="headerlink" title="写文章的总结"></a>写文章的总结</h2><p>关于这一年里折腾过的七七八八里，最让人有成就感的还得是<code>个人博客</code>这个东西。它不像 QQ 空间，也不像微信朋友圈，它不属于微博那样的类社交平台，也用不着在上面吐槽太多琐碎的事情。</p><p>它是一个私人的站点，它只属于我一个人，但这并不代表在什么东西都可以跟玩一样的写在这里。很多简单的<strong>没有技术价值</strong>的东西就不必写了。有的内容仅用作记录而言还说得过去，但 “创造” 同样的东西无异于在浪费时间，<code>CSDN</code> 和<code>知乎</code>上已经有太多同样的东西了。</p><p>我码字没有列大纲的习惯，双手放上键盘的时候才发现什么也写不出来，在这个时候才开始动脑确实还是太晚了。而自从在纸质书信一事上封笔之后，我还发现了一个更加严重的问题。在大多时候，在文章中精炼自己的语言对于我而言是一件很难的事。这不同于礼仪上的繁文缛节，是确确实实的废话连篇。 <del>特别是习惯了在各种小作文里凑字数之后。</del> 关于这方面确实还有很多地方需要改进。</p><h2 id="OneDrive的那些事"><a href="#OneDrive的那些事" class="headerlink" title="OneDrive的那些事"></a>OneDrive 的那些事</h2><p>自丰收之秋之后，我花了大量的时间在折腾 OneDrive 这件事上。经过了三个月的倒腾，我最后还是选择了 <a href="https://github.com/spencerwooo/onedrive-vercel-index">Onedrive-vercel-index</a> 。<del>（感情这项目居然重构了三个版本）</del> 在降（hui）本（shou）增（cheng）效（ben）的趋势下，各大运厂商的 Serveless 服务都陆续取消了免费额度， <del>给了各位 MJJ 当头一棒</del> 。虽然目前来看，各家的计费算法也都在我能够接受的范围内，但是不管价格如何，只要涉及到掏钱，多少还是会有些难以接受。作为性（bai）价（piao）比（dang）之选，在 <a href="https://vercel.com/">Vercel</a> 部署的话，跨境访问的响应速度会慢很多，但最大的优点是省事还不要钱！除非有一定的访问量或者得到了支持外，暂时不会去看其他的方案了。</p><p>于是，这是我现在得到的东西。</p><img src="https://s2.loli.net/2023/01/01/ka6Gh5AgqRWC2Zt.png" alt="Onedrive-Vercel-Index" style="zoom: 50%;"><p>然后，来聊聊为什么我放弃了 <a href="https://alist.nn.ci/zh/">Alist</a>。诚然，<code>Alist</code> 的界面更加友好，可自定义程度也更高，看起来是个不错的选择。但是这也给我带来了一个巨大的挑战 —— 它需要一台服务器。<del>不会吧不会吧，都快 2023 了，不会还有人没有自己的服务器吧？</del> 虽然我还有以前学 Linux 命令时在腾讯云开的机器，可国内的服务器就是有一道绕不开的坎，那就是<strong>备案</strong>。咱不是说备案不好什么的，也就是单纯觉得这东西吧，<strong>太麻烦了</strong>。</p><p>我曾经有试着用 <a href="https://azure.microsoft.com/zh-cn/free/students/">Azure 的学生机</a>来挂 <code>Alist</code>，而且差点还被 Azure 的计费方式<strong>敲了一笔</strong>。Azure 的学生套餐不能直接查看各个额度的用量，只能通过向客服申请工单的方式请求查看<code>用量表</code>。你只能看见 100$ 的免费额度在减少，至于是怎么减少的却无从得知。最最重要的，如果要使用 Azure 的机器，我有一点我必须要提醒大家：</p><blockquote><p>在你所获取的套餐中并不包含出站流量，流量的费用将直接从你的账户中扣取！（也就是从送给你的 100$ 里扣）</p></blockquote><p>在吃下了将近 20 刀的惨痛教训后，我不得不对各类厂商送出的<code>免费午餐</code>变得更加警惕。同时，也正是出于这一原因，我暂时还没有去急着去看（hao）其他厂商的小（yang）鸡（mao）。</p><blockquote><p>Google 云盘每个学校只有 100TB 的共享容量，我都开了自己的 E5 了就不去<del>和那帮 MJJ</del> 抢了。</p></blockquote><h2 id="在用的一些小工具"><a href="#在用的一些小工具" class="headerlink" title="在用的一些小工具"></a>在用的一些小工具</h2><h3 id="Termius"><a href="#Termius" class="headerlink" title="Termius"></a>Termius</h3><img src="https://s2.loli.net/2023/01/01/j4QOiDavfU9q1Gc.png" alt="Termius" style="zoom:50%;"><p>一个跨平台的 SSH 工具，而且支持配置多端同步（设备登陆时需要 <code>F2A验证</code>）。个人觉得界面比 <code>Xshell</code> 好看很多，但是传文件这方面还是 <code>Xftp</code> 更符合我的习惯。不过既然从 <code>github学生包</code>获取到了免费的 <code>pro</code> 资格，那不用白不用。</p><h3 id="Wiztree"><a href="#Wiztree" class="headerlink" title="Wiztree"></a>Wiztree</h3><img src="https://s2.loli.net/2023/01/01/qpz7gQlaT1WU8oY.png" style="zoom:33%;"><p>一个能直观显示出硬盘内文件夹或文件的大小及占用情况的工具，个人觉得比 <code>SpaceSniffer</code> 好用。</p><h3 id="PowerToys"><a href="#PowerToys" class="headerlink" title="PowerToys"></a>PowerToys</h3><img src="https://s2.loli.net/2023/01/01/iSY9ybMuI2V5E1o.png" alt="PowerToys" style="zoom: 33%;"><p>除去 <code>quicker</code> 和 <code>uTools</code> 外，又一个新上手的集成快捷工具箱，但是开源。相较于前两者的，它的入口都集中在引用末端，几乎没有多余的功能，毕竟是 <del>巨硬</del> 微软出品。美中不足的一点是 <code>Alt + 空格</code>的<code>快捷运行</code>只能打开部分应用（ “绿色安装” 的软件需要手动录入），如果要查找文件，还是得是 <code>everything</code> 更合适。</p><h1 id="消费总结"><a href="#消费总结" class="headerlink" title="消费总结"></a>消费总结</h1><p>虽然本篇的标题是 2022 的年度总结，但是有关消费环节我会将会提到自进入大学以来我所触及到的大部分产品（从 2021 的 618 开始）。</p><h3 id="先看一下EDC"><a href="#先看一下EDC" class="headerlink" title="先看一下EDC"></a>先看一下 EDC</h3><img src="https://s2.loli.net/2023/01/03/13Qg2txzC47HRqw.jpg" alt="everyday carry" style="zoom: 25%;"><p><strong>小米 10s</strong>：870 不算很强，但由于同年陪跑的 888 翻车属性实在太强了，反而成为了一代半神 U。</p><p><del><strong>红米 AirDots 3 Pro</strong>：2021 年白菜级降噪耳机，可惜寿命太短，我用过的两副都是半年就出问题了（而且为什么皓月银半年不到就停产了？）</del>（就在次年的 1 月 7 日，它的降噪功能彻底坏掉了，于是现在换成了 oppo enco free2i）</p><p><strong>oppo enco free2i</strong>：降噪深度从 35dB 提到了 42dB 给我带来最大的改变就是，台式电脑的风扇噪音（我的机箱放在桌上，散热用的是玄冰 400）听不见了。总体来说音质确实也能感受到比以前的好很多了，但不知道是不是改了均衡器设置的原因，微信和 QQ 的部分通知音效变得怪怪的了。</p><p><strong>联想 YOGA14s 2021 独显版</strong>：年轻人的第一台满血独显的 EVO 全能本，和同等重量的机型相比，满血的 <code>MX450</code> 很有竞争力。但是不支持盒盖 <code>s3睡眠模式</code>，只能改用休眠就比较难受。外出办公如果不需要慢功耗运行的话，可以购买 65w 的氮化镓 PD 充电器，它比原装的 95w 大砖头要轻便太多了。</p><p><strong>iPad mini6</strong>：今年双十一从同学手上收的在保二手货（某人：想换台能运行达芬奇的 iPad Pro）。习惯了在上面看电子书后，我直接从购物车里删掉了 Kindle（ps：个人认为 pdf 用来勾画笔记还好，但看小说不用重排版纯粹是自找麻烦）。虽然市场上有不少优秀的第三方笔也同样支持压感和磁吸充电，但是拿起笔后长达数秒的开机过程实在是太煎熬了，所以现在准备等优惠买<strong>原装的</strong> Pencil 。</p><p>充电宝：我有三个充电宝，出门的时候会按具体情况评估带哪个比较合适。日常出行带 1w 毫安的，如果是在户外待一整天就就带 2w 毫安的，旅行或者回老家会带 3w 的（3w 的不能上火车，上飞机也要先登记）。大容量充电宝优先考虑充放电功率，小容量充电宝优先考虑重量，如果钱包充实，那就尽量两个都要！</p><h3 id="宿舍生活心得"><a href="#宿舍生活心得" class="headerlink" title="宿舍生活心得"></a>宿舍生活心得</h3><p>设备方面每个人都有不同的想法，所以我在这只提两点</p><h4 id="一定要买的两幅耳机"><a href="#一定要买的两幅耳机" class="headerlink" title="一定要买的两幅耳机"></a>一定要买的两幅耳机</h4><p>主动降噪耳机是年轻人<strong>必不可少</strong>的穿戴装备，是真正能给生活质量带来飞跃性提升的宝物。另外，还要再买一幅有线的耳机插在电脑上，毕竟很多对低延迟要求比较高的场合，还是用有线耳机会更好。</p><h4 id="关于充电那些事"><a href="#关于充电那些事" class="headerlink" title="关于充电那些事"></a>关于充电那些事</h4><p>插板买的时候一定要给插座留余量，不要买刚好能插满的大小。插板上自带的 usb 插口功率很小，给手机充电太慢了，只建议用来给小功率的台灯和风扇供电。</p><blockquote><p>我有个舍友桌搭摆件很多很精致，但是完全没有预留多余的供电位。给手机电脑以外的设备充电就要借用其他人的插座 (#｀-_ゝ -)</p></blockquote><h3 id="大学生才能薅的羊毛"><a href="#大学生才能薅的羊毛" class="headerlink" title="大学生才能薅的羊毛"></a>大学生才能薅的羊毛</h3><p>这个部分就报个菜名吧（按实用性排序）</p><p>实用类：</p><blockquote><p>火车票、哈啰校园共享单车、美团外卖、京东校园</p></blockquote><p>软件和服务类：</p><blockquote><p>Apple Music（<del>音质薄纱网易云</del>）、<del>各银行 app 的 1-5 元网易云黑胶月卡</del>（优惠找不到了）、OneDrive（需要教育邮箱）</p></blockquote><p>小众类：（基本都需要教育邮箱）</p><blockquote><p>github 学生包、JetBrains 学习产品（别再问破解版 Pycharm 和 IDEA 去哪找了）、各类云服务厂商的学生机、Termius Education</p></blockquote><p>申请教育邮箱的方法每个学校各不相同，具体可以请教计算机协会的学长或者信息科的老师。</p><h3 id="浪费钱的坏文明"><a href="#浪费钱的坏文明" class="headerlink" title="浪费钱的坏文明"></a>浪费钱的坏文明</h3><p>浪费是可耻的！在金钱上同样如此。网络购物必须要量力而行，不只是指开销方面。</p><h4 id="手机云台"><a href="#手机云台" class="headerlink" title="手机云台"></a>手机云台</h4><p>去年双十一我入了一台 <code>DJI OM 4 SE</code>。产品本身整体使用感觉非常好，没有任何问题 —— 问题出在我自己身上。曾经我幻想着拿他来拍各种 <code>vlog</code>，到现在使用的次数累积下来可能还不超过二十次。不得不承认，我确实没有拍摄方面的喜好，遂转出回血。</p><h4 id="硬盘和硬盘，还有硬盘"><a href="#硬盘和硬盘，还有硬盘" class="headerlink" title="硬盘和硬盘，还有硬盘"></a>硬盘和硬盘，还有硬盘</h4><p>有的人一旦到了某个年纪，就会开始屯各种各样的东西。在插满了两台电脑的 M.2 硬盘位后，我的手上有闲置过 1 块 500g 的 mSATA，1 块 500g 的 SATA、1 块 500g 的 NVMe、1 块 4tb 的机械硬盘。一方面，Onedrive 已经满足了大部分低频储存需求，另一方面，我也没有多余的设备能将他们运用起来。时至今日，他们的现状只分为两种，转手和吃灰。<del>(同时奉劝各位口袋里粮不多的朋友就不要碰大容量存储硬件了，市面上所有的网盘加起来已经够满足大部分人 90% 的需求了)</del></p><h3 id="“我不好说”系列"><a href="#“我不好说”系列" class="headerlink" title="“我不好说”系列"></a>“我不好说” 系列</h3><p>我的 <code>XBOX Series手柄</code>是双十一在<code>天猫校园官方旗舰店</code>（就叫这个名字）花了 422 买的，现在回想起来真是大冤种。<del>（预定吃灰摆件 + 1）</del></p><h1 id="现实总结"><a href="#现实总结" class="headerlink" title="现实总结"></a>现实总结</h1><h2 id="社活总结"><a href="#社活总结" class="headerlink" title="社活总结"></a>社活总结</h2><p>现在来看我们可能真的是自成立以来面临最多问题的一届了（主要是以遗留问题为主？）</p><ul><li><p><input checked="" disabled="" type="checkbox"> 提高团队交流频率</p></li><li><p><input disabled="" type="checkbox"> 提高团队运作效率</p></li><li><p><input disabled="" type="checkbox"> 优化素材存储方案</p></li><li><p><input disabled="" type="checkbox"> 提高整体生产力</p></li><li><p><input checked="" disabled="" type="checkbox"> 一年内没有拿得出手的大作</p></li><li><p><input checked="" disabled="" type="checkbox"> 例行活动被外包公司占了一半以上</p></li></ul><p>放寒假封办公室前把所有硬盘都归还回柜后导致做校园年终总结的时候手里甚至没有任何素材。好不容易找其他社团借了一些素材，项目负责人又病倒了，都已经跨年了却连修改的脚本都拿不出来。</p><p>去年在预算审批里申报的 <code>NAS</code> 现在都还没批下来，迫不得已全面转用网盘。（而且多人共用一个账号甚至还会面临百度网盘的警告）至此，我们还没有找到更好的解决方案。</p><h2 id="人际总结"><a href="#人际总结" class="headerlink" title="人际总结"></a>人际总结</h2><p>与太多人结交对于多有人而言比那个不都是一件好事，同样，选择一部分对象失联也不一定都是坏事。除去网络上的匆匆过客，今年我与许多大学前认识的旧朋友断了联系，在大学只结识了很少的新朋友。这算不算一种新的 “断舍离”？</p><p>对于我而言，不要去依靠特定的圈子才是最适合的平衡方式。对于一些从别处接手过来的 Q 群，我的决定是直接开摆。多和老朋友玩游戏，少在游戏里找新朋友，这是我最大的收获。<del>（可以和朋友一起玩原神，但不要和陌生人在 FFXIV 里浪费时间）</del></p><h1 id="其他总结"><a href="#其他总结" class="headerlink" title="其他总结"></a>其他总结</h1><p>一年下来杂七杂八的事情不过尔尔。关于前途的问题光靠学校里讲的，多半是摸不清的。还得是上网自己悟。这一行刚开始还以为是眼里不识泰山，后来才晓得自己是高开低走，可谓是 “求仁得仁”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;折腾总结&quot;&gt;&lt;a href=&quot;#折腾总结&quot; class=&quot;headerlink&quot; title=&quot;折腾总结&quot;&gt;&lt;/a&gt;折腾总结&lt;/h1&gt;&lt;p&gt;（小声：瑞幸的长椅靠背坐着真难受）&lt;/p&gt;
&lt;h2 id=&quot;写文章的总结&quot;&gt;&lt;a href=&quot;#写文章的总结&quot; class=</summary>
      
    
    
    
    <category term="年度总结" scheme="https://blog.natsuu.top/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="年度总结" scheme="https://blog.natsuu.top/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>（散记）读书散记（一）</title>
    <link href="https://blog.natsuu.top/2022/12/14/%E8%AF%BB%E4%B9%A6%E6%95%A3%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://blog.natsuu.top/2022/12/14/%E8%AF%BB%E4%B9%A6%E6%95%A3%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-12-14T02:55:21.000Z</published>
    <updated>2024-04-06T04:08:23.836Z</updated>
    
    <content type="html"><![CDATA[<h1 id="纸质书？电子书？"><a href="#纸质书？电子书？" class="headerlink" title="纸质书？电子书？"></a>纸质书？电子书？</h1><p>因为那年的某件大事原因，原本在教室的日常学习改为了在宿舍上网课，我也赶在图书馆关闭前把《岩波日本史（3）》还了回去。与此同时，还莫明其妙种草了电纸书，Dennis 学长因此对这方面表达了相当多的意见。总之就是因为这个玩意到最后肯定会沦为泡面盖，就劝我三思，不要掉进消费陷阱（事后证明他的判断是正确的）。但是比计划来得更快的是意外 —— 同部门的同学因为要换 ipad pro，就把他现在在用的 ipad mini6 以不到 3k 的价格卖给了我 <del>（有教育优惠真的可以为所欲为）</del> 。那么按照流程，此时就应该打开 z-lib 了…… 等等，我 z-lib 呢？怎么突然挂了（土拨鼠咆哮.mp4）</p><p>好吧，虽然 <code>z-lib</code> 暂时用不了了，但是我也在这段时间里找到了更多其他的搜书渠道，所以也算是有些小小的收获。</p><h1 id="烤乳鸽"><a href="#烤乳鸽" class="headerlink" title="烤乳鸽"></a>烤乳鸽</h1><p>咕咕咕，这只鸽子把这篇文章搁置了半年，还不如抓出去烤了。（bushi）</p><h1 id="在那之后"><a href="#在那之后" class="headerlink" title="在那之后"></a>在那之后</h1><p>花了大概两个月学期的时间，总算（囫囵吞枣地）把这套书看完了。黑船事件和岩仓使团成了我对日本近代史中印象较深的部分。</p><p>看电子书也逐渐开始成为正式我生活的一部分，这半年的时间里我陆陆续续也看了一些其他的书《我的前半生》《教授的英国史》《岩田先生：任天堂传奇社长如是说》<del>《无职转生》</del>。在很久之前，我一直以没有合适的环境或是合适的时间为借口，并以此来逃避自己没有办法专心看书这件事。但是现在我找到了一个巧妙的方法来解决，那就是直接把电子书导入 <code>讯飞有声</code> 播放。</p><p>顺带一提，在平时的大多数时间里，我的耳机里播放的都不是音乐。自小以来我也没有这方面的习惯，我是听着汽车上的调频广播长大的，所以相比之下我还是更喜欢听播客这类东西。但是我喜欢的那几个节目时常加起来通常都不能满足我的需求，我就开始尝试在听完播客后也听一下让 <code>tts</code> 把书里的内容读给我听。久而久之，这便也成为了一个习惯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;纸质书？电子书？&quot;&gt;&lt;a href=&quot;#纸质书？电子书？&quot; class=&quot;headerlink&quot; title=&quot;纸质书？电子书？&quot;&gt;&lt;/a&gt;纸质书？电子书？&lt;/h1&gt;&lt;p&gt;因为那年的某件大事原因，原本在教室的日常学习改为了在宿舍上网课，我也赶在图书馆关闭前把《岩波</summary>
      
    
    
    
    <category term="随想" scheme="https://blog.natsuu.top/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="读书" scheme="https://blog.natsuu.top/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>（散记）读书散记（零）</title>
    <link href="https://blog.natsuu.top/2022/10/12/%E8%AF%BB%E4%B9%A6%E6%95%A3%E8%AE%B0%EF%BC%88%E9%9B%B6%EF%BC%89/"/>
    <id>https://blog.natsuu.top/2022/10/12/%E8%AF%BB%E4%B9%A6%E6%95%A3%E8%AE%B0%EF%BC%88%E9%9B%B6%EF%BC%89/</id>
    <published>2022-10-12T13:49:02.000Z</published>
    <updated>2024-04-06T04:08:23.836Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图书馆"><a href="#图书馆" class="headerlink" title="图书馆"></a>图书馆</h1><p>入口的大门在第二层，进了大门后按照指示从藏书馆专用的楼梯走下了一楼。一楼也有自习用的桌椅，但人并不多，甚至还有空桌。顺着架子的上编号一路走过去，没有找到表示历史的 <code>K 类</code>，通道的尽头是两到三排的 <code>I 类</code>艺术类。</p><p>靠里的某个书架之间有一位少女，她突兀地坐在那里，一个人坐在椅子上看书 —— 大概是图书馆的管理员。她没有注意到我，我也不想去打扰她，于是就靠着墙边往别处走去。</p><p>图书馆一楼的深处有很多锁着的柜子，里面放着档案、文档、甚至磁带。</p><p>花了一些时间，终于在另一个角落找到了 <code>K类</code>。确切的说，在那里的一大片区域都是单独分给 <code>K类</code>的，大概不少于三四十个书架。<code>2xx~5xx</code> 的架子上靠走道的位置便是日本史。那里的光线很暗，要走到更靠里一点的位置才能触发补充光源的感应器，只好打开手机的电筒找书。</p><h1 id="《岩波日本史》"><a href="#《岩波日本史》" class="headerlink" title="《岩波日本史》"></a>《岩波日本史》</h1><p>在书架的最顶部，《剑桥日本史》显得格外突出，我一开始是想要那本的。但无奈的是，整个系列只有一本在那里，整个图书馆系统也只能查到那唯一的一本，她甚至没有被任何人借阅过。因为此行的目的是找通史类书籍，所以对书架的下部放有各不同版本的《菊与刀》（[美] 本尼迪克特）也不感兴趣。《岩波日本史》零散地分布在邻近的区块，大致观察了一下，幸好整个系列都在，没有空缺。我想把他们都摆在一起，但是这里不是书店，他们比喻按照馆藏的编号摆在指定的位置。要是擅自挪动的话，或许会给后面来找书的人带来困扰 —— 特别是这种 “人迹罕至” 的类别。</p><p><code>岩波青年新书版《日本的历史》</code>的中文译版<code>《岩波日本史》</code>[1] 属于轻薄类通俗读物，每本 10w 字共 9 本。作为<code>青年新書</code> (せいねんしんしょ)，它面向的对象是<code>高校生</code> (こうこうせい) 到<code>学部生</code> (がくぶせい) —— 也就是高中生到本科生。从原始社会到现代的各种人文特征和历史大事件都有所记录，非常适合拿来当休闲读物。</p><h2 id="散记"><a href="#散记" class="headerlink" title="散记"></a>散记</h2><h3 id="绳文时代主要活动"><a href="#绳文时代主要活动" class="headerlink" title="绳文时代主要活动"></a>绳文时代主要活动</h3><p><img src="https://s2.loli.net/2022/10/13/iPgCpBt9c2dOsvE.png"><br><del>感觉原始人吃的比我好</del></p><h3 id="遗失的历史"><a href="#遗失的历史" class="headerlink" title="遗失的历史"></a>遗失的历史</h3><blockquote><p>《魏志》记载了三世纪的邪马台国，《宋书》记载了五世纪的倭国五王，但是却没有四世纪大和王权诞生时倭国的相关记载。其原因可能是四世纪的中国正处于五胡十六国时代，国内分裂，疏于外交。在中国史书中看不到记载的倭国四世纪被称为 “谜之四世纪”。《宋书》记载的倭国五王之前，倭人出现在外国史料中是在四世纪末，那就是曾为高句丽国王的广开土王的墓碑。</p></blockquote><p>除了本地流传下来的史册外，别国的书籍也是一种重要的参考资料。</p><h3 id="“景初四年”"><a href="#“景初四年”" class="headerlink" title="“景初四年”"></a>“景初四年”</h3><blockquote><p>虽然也有意见认为这些铜镜是魏国专为倭国制作的特铸品，但是在制作国却从未出土过，这一点让人难以理解。此外，在京都府福知山市的广峰十五号墓中出土了魏国年号中不存在的 “景初四年” 铭文的铜镜，辰马考古资料馆藏的斜缘盘龙镜也认定其为同范镜（用同样的模具铸造的铜镜）。虽然有可能是预先制造的，但是这很不具说服力。。</p></blockquote><p>建交遗留文物，<del>但是是赝品</del>。</p><h3 id="后记里的碎碎念"><a href="#后记里的碎碎念" class="headerlink" title="后记里的碎碎念"></a>后记里的碎碎念</h3><blockquote><p>我经常举例的词语有 “あほ”（aho）和 “ばか”（baka）的用法。其实在西部和东部，“あほ” 和 “ばか” 的语感完全不同。小时候，一天要听好多遍 “あほ”。大阪人讲 “お前、 あほやな（喂，你这个笨蛋)” 中 “あほ” 一词有一种亲切感。甚至有一句绕口令 “あほ，あほ，言うな、あほ”（不要笨蛋笨蛋地叫，笨蛋)。但是如果说 “ばか”，两个人之间就有一种紧张感。在东京，这两个词的意思却完全相反，实在不可思议。</p></blockquote><p><del>《名侦探柯南》中青山也曾借柯南和平次之口吐槽过这个。</del></p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>[1] 岩波青年新书版《日本的历史》:</p><p>新星出版社 译</p><p>《日本社会的诞生》  （日） 吉村武彦</p><p>《飞鸟・奈良时代》   （日） 吉田孝</p><p>《平安时代》        （日） 保立道久</p><p>《武士时代》        （日） 五味文彦</p><p>《战国时期》        （日） 今谷明</p><p>《江户时代》        （日） 深谷克己</p><p>《明治维新》        （日） 田中彰</p><p>《帝国时期》        （日） 由井正臣</p><p>《日本的现代》      （日） 鹿野政直 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图书馆&quot;&gt;&lt;a href=&quot;#图书馆&quot; class=&quot;headerlink&quot; title=&quot;图书馆&quot;&gt;&lt;/a&gt;图书馆&lt;/h1&gt;&lt;p&gt;入口的大门在第二层，进了大门后按照指示从藏书馆专用的楼梯走下了一楼。一楼也有自习用的桌椅，但人并不多，甚至还有空桌。顺着架子的上编号</summary>
      
    
    
    
    <category term="随想" scheme="https://blog.natsuu.top/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="读书" scheme="https://blog.natsuu.top/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>（QQ-bot）Pallas-Bot 的一键式部署</title>
    <link href="https://blog.natsuu.top/2022/10/02/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0nonebot%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>https://blog.natsuu.top/2022/10/02/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0nonebot%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%9A%84%E9%83%A8%E7%BD%B2/</id>
    <published>2022-10-02T11:29:52.000Z</published>
    <updated>2024-04-06T04:08:23.836Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前提知识"><a href="#前提知识" class="headerlink" title="前提知识"></a>前提知识</h1><p><code>NoneBot2</code>：一个跨平台的 Python 聊天机器人<code>框架</code></p><p><code>Pallas-Bot</code>：一框交互式的聊天机器人<code>插件</code></p><p><code>Dice</code>：一款 QQ 跑团掷骰机器人<code>插件</code></p><h1 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h1><p>得益于溯洄大佬在<a href="https://forum.kokona.tech/">论坛</a>上提供的一键式 <code>Dice!</code> 部署脚本，很多没有编程基础的人也可以在自己的设备上部署自己的<code>骰娘</code> [^1]。利用<code>批处理脚本</code>来替代用户执行特定操作，这是一种非常巧妙的方法。那么有没有可能，这种脚本也能同样用于其他的聊天机器人上呢？</p><h1 id="解读脚本"><a href="#解读脚本" class="headerlink" title="解读脚本"></a>解读脚本</h1><p>在开始工作之前，最好先提前了解一下它的实现方式。</p><p>首先，用户在论坛的导航页下载 <code>OneClickMiraiDice.cmd</code>，然后启动脚本，让批处理脚本来代替用户完成部署操作。</p><img src="https://s2.loli.net/2022/10/03/b3oalvDkQI7Hwdx.png" style="zoom:50%;"><p>部署完成后，目录下的 <code>PowerShell脚本</code>即 <code>main.ps1</code> 是整个结构的核心，而同时生成的多个<code>批处理脚本</code>则负责用不同的启动参数来拉起 <code>main.ps1</code>。（其中的 bash 脚本是供 linux 用户使用的）</p><img src="https://s2.loli.net/2022/10/03/EmOIvhAZbBy69jR.png" style="zoom:40%;"><h1 id="按需修改"><a href="#按需修改" class="headerlink" title="按需修改"></a>按需修改</h1><p><del>我直接开抄！</del></p><img src="https://s2.loli.net/2022/10/03/43NepICLV8sOcyZ.png" style="zoom:50%;"><p><code>OneClickMiraiDice.cmd</code> 中原本下载的 <code>git</code> 和 <code>unzip</code> 均来自溯洄本人的 <code>OSS</code>，现在改成了从镜像站点下载。</p><p>虽然早就听说溯洄大佬为了提高在部分机型上的兼容性，特地用 <code>Windows API</code> 来代替许多已有的轮子。但是看到这个下载脚本的时候都还是被震惊到了的。</p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DownloadFile</span><span class="params">(<span class="variable">$url</span>, <span class="variable">$targetFile</span>)</span></span></span><br><span class="line">{</span><br><span class="line"><span class="variable">$uri</span> = <span class="built_in">New-Object</span> <span class="string">"System.Uri"</span> <span class="string">"<span class="variable">$url</span>"</span></span><br><span class="line"><span class="variable">$request</span> = [<span class="type">System.Net.HttpWebRequest</span>]::Create(<span class="variable">$uri</span>)</span><br><span class="line"><span class="variable">$request</span>.set_Timeout(<span class="number">15000</span>) <span class="comment">#15 second timeout</span></span><br><span class="line"><span class="variable">$response</span> = <span class="variable">$request</span>.GetResponse()</span><br><span class="line"><span class="variable">$totalLength</span> = [<span class="type">System.Math</span>]::Floor(<span class="variable">$response</span>.get_ContentLength()/<span class="number">1024</span>)</span><br><span class="line"><span class="variable">$responseStream</span> = <span class="variable">$response</span>.GetResponseStream()</span><br><span class="line"><span class="variable">$targetStream</span> = <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.IO.FileStream <span class="literal">-ArgumentList</span> <span class="variable">$targetFile</span>, Create</span><br><span class="line"><span class="variable">$buffer</span> = <span class="built_in">new-object</span> byte[] <span class="number">256</span>KB</span><br><span class="line"><span class="variable">$count</span> = <span class="variable">$responseStream</span>.Read(<span class="variable">$buffer</span>,<span class="number">0</span>,<span class="variable">$buffer</span>.length)</span><br><span class="line"><span class="variable">$downloadedBytes</span> = <span class="variable">$count</span></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$count</span> <span class="operator">-gt</span> <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="variable">$targetStream</span>.Write(<span class="variable">$buffer</span>, <span class="number">0</span>, <span class="variable">$count</span>)</span><br><span class="line"><span class="variable">$count</span> = <span class="variable">$responseStream</span>.Read(<span class="variable">$buffer</span>,<span class="number">0</span>,<span class="variable">$buffer</span>.length)</span><br><span class="line"><span class="variable">$downloadedBytes</span> = <span class="variable">$downloadedBytes</span> + <span class="variable">$count</span></span><br><span class="line"><span class="built_in">Write-Progress</span> <span class="literal">-activity</span> <span class="string">"正在下载文件 '<span class="variable">$</span>(<span class="variable">$url</span>.split('/') | Select -Last 1)'"</span> <span class="literal">-Status</span> <span class="string">"已下载 (<span class="variable">$</span>([System.Math]::Floor(<span class="variable">$downloadedBytes</span>/1024))K of <span class="variable">$</span>(<span class="variable">$totalLength</span>)K): "</span> <span class="literal">-PercentComplete</span> ((([<span class="type">System.Math</span>]::Floor(<span class="variable">$downloadedBytes</span>/<span class="number">1024</span>)) / <span class="variable">$totalLength</span>)  * <span class="number">100</span>)</span><br><span class="line">}</span><br><span class="line"><span class="built_in">Write-Progress</span> <span class="literal">-activity</span> <span class="string">"文件 '<span class="variable">$</span>(<span class="variable">$url</span>.split('/') | Select -Last 1)' 下载已完成"</span> <span class="literal">-Status</span> <span class="string">"下载已完成"</span> <span class="literal">-Completed</span></span><br><span class="line"><span class="variable">$targetStream</span>.Flush()</span><br><span class="line"><span class="variable">$targetStream</span>.Close()</span><br><span class="line"><span class="variable">$targetStream</span>.Dispose()</span><br><span class="line"><span class="variable">$responseStream</span>.Dispose()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>不过不知道为什么，这个脚本无法下载 MongoDB 以及 Microsoft Visual C++ Build Tools 14.0。所以这里改用了小透明・宸的多线程下载脚本。</p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PartiallyDownload-File</span><span class="params">([String]<span class="variable">$Uri</span>, [String]<span class="variable">$OutFile</span>, [Int64]<span class="variable">$Start</span>, [Int64]<span class="variable">$End</span> = 0, [String]<span class="variable">$UserAgent</span> = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)</span> <span class="title">AppleWebKit</span>/<span class="title">537</span>.<span class="title">36</span> <span class="params">(KHTML, like Gecko)</span> <span class="title">Chrome</span>/<span class="title">74</span>.<span class="title">0</span>.<span class="title">3729</span>.<span class="title">169</span> <span class="title">Safari</span>/<span class="title">537</span>.<span class="title">36</span>')</span> {</span><br><span class="line">    [<span class="type">Net.ServicePointManager</span>]::DefaultConnectionLimit = [<span class="built_in">Int</span><span class="type">32</span>]::MaxValue</span><br><span class="line">    <span class="variable">$Request</span> = [<span class="type">Net.WebRequest</span>]::Create(<span class="variable">$Uri</span>)</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$End</span>) {</span><br><span class="line">        <span class="variable">$Request</span>.AddRange(<span class="variable">$Start</span>, <span class="variable">$End</span>)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="variable">$Request</span>.AddRange(<span class="variable">$Start</span>)</span><br><span class="line">    }</span><br><span class="line">    <span class="variable">$Request</span>.UserAgent = <span class="variable">$UserAgent</span></span><br><span class="line">    <span class="variable">$Request</span>.Proxy = <span class="variable">$null</span></span><br><span class="line">    <span class="variable">$Response</span> = <span class="variable">$Request</span>.GetResponse()</span><br><span class="line">    <span class="variable">$Stream</span> = <span class="variable">$Response</span>.GetResponseStream()</span><br><span class="line">    <span class="variable">$File</span> = [<span class="type">IO.File</span>]::Create(<span class="variable">$OutFile</span>)</span><br><span class="line">    <span class="variable">$Stream</span>.CopyTo(<span class="variable">$File</span>)</span><br><span class="line">    <span class="variable">$File</span>.Close()</span><br><span class="line">    <span class="variable">$Stream</span>.Close()</span><br><span class="line">    <span class="variable">$Response</span>.Close()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Merge-File</span><span class="params">([String[]]<span class="variable">$Source</span>, [String]<span class="variable">$Destination</span>)</span></span> {</span><br><span class="line">    <span class="variable">$Source</span> = <span class="variable">$Source</span>.Clone()</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$Source</span>.Length; <span class="variable">$i</span>++) {</span><br><span class="line">        <span class="variable">$Source</span>[<span class="variable">$i</span>] = <span class="string">'"'</span> + <span class="variable">$ExecutionContext</span>.SessionState.Path.GetUnresolvedProviderPathFromPSPath(<span class="variable">$Source</span>[<span class="variable">$i</span>]) + <span class="string">'"'</span></span><br><span class="line">    }</span><br><span class="line">    cmd /c <span class="built_in">copy</span> /b /y (<span class="variable">$Source</span> <span class="operator">-join</span> <span class="string">'+'</span>) <span class="variable">$ExecutionContext</span>.SessionState.Path.GetUnresolvedProviderPathFromPSPath(<span class="variable">$Destination</span>) | <span class="built_in">Out-Null</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MultiThreadDownload-File</span><span class="params">([String]<span class="variable">$Uri</span>, [String]<span class="variable">$OutFile</span>, [Int32]<span class="variable">$ThreadCount</span> = 4, [Int32]<span class="variable">$MinSliceSize</span> = 256KB, [String]<span class="variable">$UserAgent</span> = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)</span> <span class="title">AppleWebKit</span>/<span class="title">537</span>.<span class="title">36</span> <span class="params">(KHTML, like Gecko)</span> <span class="title">Chrome</span>/<span class="title">74</span>.<span class="title">0</span>.<span class="title">3729</span>.<span class="title">169</span> <span class="title">Safari</span>/<span class="title">537</span>.<span class="title">36</span>')</span> {</span><br><span class="line">    [<span class="type">Net.ServicePointManager</span>]::DefaultConnectionLimit = [<span class="built_in">Int</span><span class="type">32</span>]::MaxValue</span><br><span class="line">    [<span class="built_in">Int</span><span class="type">64</span>]<span class="variable">$Length</span> = (<span class="built_in">Invoke-WebRequest</span> <span class="variable">$Uri</span> <span class="literal">-Method</span> Head <span class="literal">-UseBasicParsing</span> <span class="literal">-Proxy</span> <span class="variable">$null</span>).Headers.<span class="string">'Content-Length'</span></span><br><span class="line">    [<span class="built_in">String</span>[]]<span class="variable">$Part</span> = <span class="selector-tag">@</span>()</span><br><span class="line">    [<span class="built_in">Int</span><span class="type">64</span>[]]<span class="variable">$Start</span> = <span class="selector-tag">@</span>()</span><br><span class="line">    [<span class="built_in">Int</span><span class="type">64</span>[]]<span class="variable">$End</span> = <span class="selector-tag">@</span>()</span><br><span class="line">    [<span class="type">Management.Automation.PowerShell</span>[]]<span class="variable">$Job</span> = <span class="selector-tag">@</span>()</span><br><span class="line">    [<span class="type">Object</span>[]]<span class="variable">$Handle</span> = <span class="selector-tag">@</span>()</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$MinSliceSize</span> * <span class="variable">$ThreadCount</span>) <span class="operator">-gt</span> <span class="variable">$Length</span>) { <span class="variable">$ThreadCount</span> = [<span class="type">Math</span>]::Floor(<span class="variable">$Length</span> / <span class="variable">$MinSliceSize</span>) }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$ThreadCount</span>; <span class="variable">$i</span>++) {</span><br><span class="line">        <span class="variable">$Start</span> += <span class="variable">$End</span>[<span class="variable">$i</span> - <span class="number">1</span>] + [<span class="built_in">Int</span><span class="type">64</span>](!!<span class="variable">$i</span>)</span><br><span class="line">        <span class="variable">$End</span> += [<span class="type">Math</span>]::Round(<span class="variable">$Length</span> / <span class="variable">$ThreadCount</span> * (<span class="variable">$i</span> + <span class="number">1</span>))</span><br><span class="line">        <span class="variable">$Part</span> += <span class="variable">$ExecutionContext</span>.SessionState.Path.GetUnresolvedProviderPathFromPSPath([<span class="type">GUID</span>]::NewGuid().ToString(<span class="string">'N'</span>) + <span class="string">'.bin'</span>)</span><br><span class="line">        <span class="variable">$Job</span> += [<span class="type">PowerShell</span>]::Create().AddScript(<span class="variable">$</span>{Function:PartiallyDownload<span class="operator">-File</span>}).AddParameter(<span class="string">'Uri'</span>, <span class="variable">$Uri</span>).AddParameter(<span class="string">'OutFile'</span>, <span class="variable">$Part</span>[<span class="variable">$i</span>]).AddParameter(<span class="string">'Start'</span>, <span class="variable">$Start</span>[<span class="variable">$i</span>]).AddParameter(<span class="string">'End'</span>, <span class="variable">$End</span>[<span class="variable">$i</span>]).AddParameter(<span class="string">'UserAgent'</span>, <span class="variable">$UserAgent</span>)</span><br><span class="line">        <span class="variable">$Handle</span> += <span class="variable">$Job</span>[<span class="variable">$i</span>].BeginInvoke()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">Double</span>]<span class="variable">$Progress</span> = <span class="number">0</span></span><br><span class="line">    [<span class="built_in">Int</span><span class="type">32</span>]<span class="variable">$Interval</span> = <span class="number">200</span></span><br><span class="line">    [<span class="built_in">Bool</span><span class="type">ean</span>]<span class="variable">$Complete</span> = <span class="variable">$false</span></span><br><span class="line">    <span class="keyword">while</span> (!<span class="variable">$Complete</span>) {</span><br><span class="line">        <span class="built_in">Start-Sleep</span> <span class="literal">-Milliseconds</span> <span class="variable">$Interval</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$Complete</span> = <span class="variable">$true</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$ThreadCount</span>; <span class="variable">$i</span>++) {</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$Handle</span>[<span class="variable">$i</span>].IsCompleted) {</span><br><span class="line">                <span class="variable">$Complete</span> = <span class="variable">$false</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$ThreadCount</span>; <span class="variable">$i</span>++) {</span><br><span class="line">            <span class="keyword">if</span> (!(<span class="built_in">Test-Path</span> <span class="variable">$Part</span>[<span class="variable">$i</span>])) { <span class="keyword">continue</span> }</span><br><span class="line">            <span class="variable">$Progress</span> = (<span class="built_in">Get-Item</span> <span class="variable">$Part</span>[<span class="variable">$i</span>]).Length / (<span class="variable">$End</span>[<span class="variable">$i</span>] - <span class="variable">$Start</span>[<span class="variable">$i</span>] + <span class="number">1</span>) * <span class="number">100</span></span><br><span class="line">            <span class="built_in">Write-Progress</span> <span class="literal">-Id</span> <span class="variable">$i</span> <span class="literal">-Activity</span> (<span class="string">'Thread #{0} {1} - {2}'</span> <span class="operator">-f</span> <span class="variable">$i</span>, <span class="variable">$Start</span>[<span class="variable">$i</span>], <span class="variable">$End</span>[<span class="variable">$i</span>]) <span class="literal">-Status</span> (<span class="string">'{0} / {1} {2:f2}%'</span> <span class="operator">-f</span> (<span class="built_in">Get-Item</span> <span class="variable">$Part</span>[<span class="variable">$i</span>]).Length, (<span class="variable">$End</span>[<span class="variable">$i</span>] - <span class="variable">$Start</span>[<span class="variable">$i</span>] + <span class="number">1</span>), <span class="variable">$Progress</span>) <span class="literal">-PercentComplete</span> <span class="variable">$Progress</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$ThreadCount</span>; <span class="variable">$i</span>++) {</span><br><span class="line">        <span class="built_in">Write-Progress</span> <span class="literal">-Id</span> <span class="variable">$i</span> <span class="literal">-Activity</span> (<span class="string">'Thread {0} - {1}'</span> <span class="operator">-f</span> <span class="variable">$Start</span>[<span class="variable">$i</span>], <span class="variable">$End</span>[<span class="variable">$i</span>]) <span class="literal">-Completed</span></span><br><span class="line">        <span class="variable">$Job</span>[<span class="variable">$i</span>].EndInvoke(<span class="variable">$Handle</span>[<span class="variable">$i</span>])</span><br><span class="line">        <span class="variable">$Job</span>[<span class="variable">$i</span>].Runspace.Close()</span><br><span class="line">        <span class="variable">$Job</span>[<span class="variable">$i</span>].Dispose()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Merge-File</span> <span class="literal">-Source</span> <span class="variable">$Part</span> <span class="literal">-Destination</span> <span class="variable">$OutFile</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$p</span> <span class="keyword">in</span> <span class="variable">$Part</span>) { <span class="built_in">Remove-Item</span> <span class="variable">$p</span> }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里有一点不得不提的就是，很多人都群里问为什么自己明明已经装了很多的运行库，却还是会出现这样的提示：</p><blockquote><p>Microsoft Visual C+ 14.0 or greater is required. Get it with ‘nicrosoft C++ Build Tools’：……</p></blockquote><p>请仔细看，这里需要用到的是 <code>Build Tools</code>，而不是常见的 <code>Runtime</code>。在开发过程中安装 <code>Build Tools</code> 这一步骤通常都会由 <code>IDE</code> 自动完成。但是对于普通用户而言，为了部署一个聊天机器人就去下载 <code>VisualStudio</code>，还是有些太浪费时间了。所以还是直接下载 <code>Microsoft Visual C++ Build Tools 14.0</code> 更方便。（尽管他的体积也不算小）</p><p>不同于 mirai 这样的基于 java 的程序。nonebot 需要在部署后额外再安装所需的依赖，所以就把这一步改成了在启动 <code>nonebot</code> 的时候再执行。<del>就当检查运行环境了</del></p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net <span class="built_in">start</span> MongoDB</span><br><span class="line"></span><br><span class="line">python <span class="literal">-m</span> pip install <span class="literal">--upgrade</span> pip <span class="literal">-i</span> https://mirror.baidu.com/pypi/simple</span><br><span class="line">pip install <span class="literal">-i</span> https://mirror.baidu.com/pypi/simple <span class="literal">-r</span> requirements.txt</span><br><span class="line"></span><br><span class="line">nb plugin install nonebot_plugin_apscheduler</span><br><span class="line">nb plugin install gocqhttp</span><br><span class="line"></span><br><span class="line">nb run</span><br></pre></td></tr></tbody></table></figure><p>启动 <code>nonebot</code> 之前要记得先启动 <code>MongoDB</code> 服务，这一步是需要用到管理员权限的。所以，要记得在<code>批处理脚本</code>启动的时候直接以管理员身份拉起 <code>PowerShell</code>。</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p>溯洄：<a href="https://blog.kokona.tech/">https://blog.kokona.tech</a></p><p>小透明・宸：<a href="https://akarin.dev/">https://akarin.dev</a></p><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><p>[^1]：QQ 跑团掷骰机器人的别称</p><p>相关链接：</p><p>NoneBot2：<a href="https://v2.nonebot.dev/">https://v2.nonebot.dev/</a></p><p>Pallas-Bot：<a href="https://github.com/MistEO/Pallas-Bot">https://github.com/MistEO/Pallas-Bot</a></p><p>Dice：<a href="https://github.com/Dice-Developer-Team/Dice">https://github.com/Dice-Developer-Team/Dice</a></p><p>Pallas-Helper：<a href="https://github.com/NtskwK/Pallasbot-Helper">https://github.com/NtskwK/Pallasbot-Helper</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前提知识&quot;&gt;&lt;a href=&quot;#前提知识&quot; class=&quot;headerlink&quot; title=&quot;前提知识&quot;&gt;&lt;/a&gt;前提知识&lt;/h1&gt;&lt;p&gt;&lt;code&gt;NoneBot2&lt;/code&gt;：一个跨平台的 Python 聊天机器人&lt;code&gt;框架&lt;/code&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="踩坑" scheme="https://blog.natsuu.top/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="Nonebot" scheme="https://blog.natsuu.top/tags/Nonebot/"/>
    
    <category term="QQ-bot" scheme="https://blog.natsuu.top/tags/QQ-bot/"/>
    
  </entry>
  
  <entry>
    <title>（Premiere Pro）Pr2022 的语音包拆分</title>
    <link href="https://blog.natsuu.top/2022/10/01/Pr2022%E7%9A%84%E8%AF%AD%E9%9F%B3%E5%8C%85%E6%8B%86%E5%88%86/"/>
    <id>https://blog.natsuu.top/2022/10/01/Pr2022%E7%9A%84%E8%AF%AD%E9%9F%B3%E5%8C%85%E6%8B%86%E5%88%86/</id>
    <published>2022-10-01T15:40:03.000Z</published>
    <updated>2024-04-06T04:08:23.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="话说在前"><a href="#话说在前" class="headerlink" title="话说在前"></a>话说在前</h1><p>我们剪辑工作室的招新工作即将完成，一群刚从高中毕业的小朋友们正准备成为新的同事。这本是每年必不可少的一件事，现在却给我们带来了不小的挑战。大家新买的笔记本电脑预装的都是 <code>Windows11</code>，而我们常用的软件 <code>Premiere Pro</code> 的 <code>2021</code> 版本对新系统的兼容性并不是很好。于是，我和一起工作的朋友们曾在讨论是否需要把目前的剪辑工作流从 Pr<code>2021</code> 迁移到 <code>2022</code>。（尽管去年我才艰难地说服了所有成员将已经安装的旧版软件更换为统一版本）</p><p>在经历过几次更新后，<code>Premiere Pro 2022</code> 的稳定性已经比原来改善了许多。新版本的 Premiere Pro 不仅提升了性能，也给我们带来了许多更强大的新功能。我们将一部分更换新版本带来的改变列举了出来：</p><p><strong>优势</strong></p><ul><li>软件界面更加便于上手</li><li>对新硬件和新系统的支持性更好</li><li>强大的<strong>离线</strong><code>S2T</code>（Speech to Text：语音转文字）功能</li></ul><p><strong>劣势</strong></p><ul><li>需要重新适应功能布局</li><li>删掉了<code>旧版标题</code></li><li>以及…… 安装包的体积实在是<strong>太大了</strong></li></ul><h1 id="简单思考"><a href="#简单思考" class="headerlink" title="简单思考"></a>简单思考</h1><h2 id="从安装包开始"><a href="#从安装包开始" class="headerlink" title="从安装包开始"></a>从安装包开始</h2><p>其实相对来说，前面两点还挺好解决。但是最后这一点还是有不小难度的。<code>Premiere Pro</code> 这款软件本身大小只有不到 <code>3GB</code>，但是如果算上 <code>5GB</code> 大小的离线语言包，那么整个安装包的体积将会直接来到 <code>8GB</code> 以上 —— 这是非常致命的！</p><p>除去会员费昂贵的某度网盘，和不支持分享压缩文件的某网盘外，几乎很难找到便于分享大文件 <a href="FAT32%E6%A0%BC%E5%BC%8F%E4%B8%8D%E6%94%AF%E6%8C%814G%E4%BB%A5%E4%B8%8A%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BE%88%E5%A4%9A%E5%9C%A8%E7%BA%BF%E6%9C%8D%E5%8A%A1%E9%83%BD%E6%8A%8A%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6%E5%85%81%E8%AE%B8%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BD%93%E7%A7%AF%E8%AE%BE%E5%9C%A8%E4%BA%86%E8%BF%99%E4%B8%AA%E5%80%BC%E3%80%82">1</a> 的渠道。（自建下载渠道不算常见的分享方式）而根据以往的经验，如果将大文件分卷成多个小文件进行分享，又不可避免的会有人做出令人血压升高的操作。所以也不会考虑使用这种方式。</p><h2 id="不可或缺的新功能"><a href="#不可或缺的新功能" class="headerlink" title="不可或缺的新功能"></a>不可或缺的新功能</h2><p>既然语言包的体积过于庞大，那么，为什么不去找已经不带语言包的版本呢？</p><p>从一方面来说，由于特殊的网络环境，我们无法通过软件内置的安装渠道下载语言包。另一方面，对于我<strong>个人</strong>而言，除去本地的 <code>S2T</code> 功能以外，新版本的更新并没有太多能打动我的地方。除了升级版本在稳定性上带来的风险外，新版本在功能上做出的调整也会让人怀疑投入新的时间成本去适应是否的值得。</p><p><code>S2T</code> 作为一个广大用户都期待已久的功能，其地位是举足轻重的。 <del>剪映都有个这功能了，你一个专业软件不会还把这种事交给其他工具干吧？</del> 所以这个问题果然还是得换一种方式解决。</p><h1 id="新的发现"><a href="#新的发现" class="headerlink" title="新的发现"></a>新的发现</h1><p>通过分析完整版安装和不带语音包安装的区别可以看出，语音包被安装在了这个目录下。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Common Files\Adobe\Premiere Pro\22.0\SpeechESL\&lt;version&gt;\</span><br></pre></td></tr></tbody></table></figure><p>那么，事情就变得简单起来了 —— 我们只需要把语言包单独打包，再和不带语音包的版本一起发出去就好了。</p><p>从安装包的目录下可以找到这些文件（以 vposy 大佬的版本为例）</p><p><img src="https://s2.loli.net/2022/10/03/7LJFpQBy1wUql6Y.png" alt="安装包目录"></p><p>发现语言都是用缩写表示的，特别是这个 “yue 语” 我想了半天愣是想不出 <code>yue</code> 的全称到底是什么。于是打开 json 文件看一下</p><p><img src="https://s2.loli.net/2022/10/03/zb4U9vPYWB1FNdk.png" alt="粤语语音包"></p><p>打开一看，Cantonese Chinese？好家伙，居然真的是 “粤（yue）语”。</p><p><img src="https://s2.loli.net/2022/10/03/2nFeyDtKM6SPCWv.png"></p><p>接着，把压缩文件内的核心部分提取出来，重命名一下，再附上个简单的食用说明。</p><p><img src="https://s2.loli.net/2022/10/03/NUGmjeTLyfYv7O4.png"></p><p>重新压缩一下，再和 <code>Pr2022</code> 不带语音包的版本一起发出去，这样就算大功告成了。</p><p><img src="https://s2.loli.net/2022/10/03/6zQAcljBGd4IpLY.png"></p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://weibo.com/vposy">weibo@vposy</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;话说在前&quot;&gt;&lt;a href=&quot;#话说在前&quot; class=&quot;headerlink&quot; title=&quot;话说在前&quot;&gt;&lt;/a&gt;话说在前&lt;/h1&gt;&lt;p&gt;我们剪辑工作室的招新工作即将完成，一群刚从高中毕业的小朋友们正准备成为新的同事。这本是每年必不可少的一件事，现在却给我们带来</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="Premiere Pro" scheme="https://blog.natsuu.top/tags/Premiere-Pro/"/>
    
  </entry>
  
  <entry>
    <title>（分享）一些好 (qi) 用 (guai) 的工具</title>
    <link href="https://blog.natsuu.top/2022/08/21/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>https://blog.natsuu.top/2022/08/21/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/</id>
    <published>2022-08-21T07:40:27.000Z</published>
    <updated>2024-04-06T04:08:23.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DNS-Benchmark"><a href="#DNS-Benchmark" class="headerlink" title="DNS Benchmark"></a>DNS Benchmark</h1><p>用来测试哪种配置 DNS 最适合自己</p><p>这个软件功能强大且非常简洁，它只有 <code>160kb</code> 大小，因为它是用会汇编语言的。</p><p>使用方法👉<a href="https://www.grc.com/dns/operation.htm">https://www.grc.com/dns/operation.htm</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DNS-Benchmark&quot;&gt;&lt;a href=&quot;#DNS-Benchmark&quot; class=&quot;headerlink&quot; title=&quot;DNS Benchmark&quot;&gt;&lt;/a&gt;DNS Benchmark&lt;/h1&gt;&lt;p&gt;用来测试哪种配置 DNS 最适合自己&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>Hello my first blog!</title>
    <link href="https://blog.natsuu.top/2022/07/21/Hello%20my%20first%20blog!/"/>
    <id>https://blog.natsuu.top/2022/07/21/Hello%20my%20first%20blog!/</id>
    <published>2022-07-21T07:26:15.000Z</published>
    <updated>2024-04-06T04:08:23.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="先来说说markdown"><a href="#先来说说markdown" class="headerlink" title="先来说说markdown"></a>先来说说 markdown</h1><p>我不喜欢用富文本工具来写东西。因为不懂地方使用的富文本编辑器面板都不一样，每次到了不同的平台，还需要重新适应新的工作方式。客观的来说，不同平台上富文本编辑器在走向高度个性化发展的同时，也为现在的创作环境带来了极大的混乱。而且使用富文本编辑器需要我们频繁的操控鼠标，就像用笔写字却要频繁地要把笔放下一样，是很不利于将注意力持续集中在书写上的。<br>使用 <code>markdown</code> 格式编写内容时只需要使用合理地使用常用的标点符号就可以完成大量的排版工作，而且不用担心像使用 <code>word文档</code>那样会出现快捷键冲突的问题，这样可以提高我们创作的效率。</p><h1 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h1><p>使用过各种各样的在线笔记平台后，最终还是选择了用 <code>hexo</code> 在 <code>gitpage</code> 上搭建静态博客。<br>利用 <code>gitpage</code> 服务可以大量减少后期的维护工作，不用担心被打，也不用操心配置<code>域名</code>和 <code>CDN</code> 一类的问题。对于一个入门级选手来说，降低了配置门槛。<del>（但是如果以后要建站的话还是要学习这些东西）</del><br>更重要的是，内容的发布和储存都是掌握在自己手中的。完全不用担心自己的工作成果因为各种<em>河蟹</em>一夜之间全部丢失。</p><h1 id="来发布图片吧"><a href="#来发布图片吧" class="headerlink" title="来发布图片吧"></a>来发布图片吧</h1><p>在接触在线笔记平台的时候我就注意到了这个问题。<br>很多社交软件中的允许我们直接选中电脑中的图片添加或者从剪贴板导入。众所周知，在 <code>markdown</code> 中，图片是以链接的形式从外部引入的。如果我们用 <code>markdown</code> 格式来做笔记，那会产生多个单独的文件。但是在很多的在线笔记平台中，通常每次只允许我们上传<strong>单个</strong>文件。这就导致了如果我们不把文档转换成其他格式上传的话，就必须要先将 <code>markdown</code> 格式的纯文字文档上传，再用平台提供的编辑器来插入图片（这会非常麻烦）。<del>特别是某个限制了普通用户上传流量的平台</del>既然不能将 <code>markdown</code> 带着图片一起上传，有没有别的办法在上传的文档中添加图片呢？答案是<strong>有的</strong>！</p><p>我们可以换个角度 —— 先把图片上传到网上，然后再在文档中用 <code>url</code> 引用网络上已有的图片资源。</p><p>这就需要用到另一个工具 —— <strong>图床</strong>。</p><p>我们可以把图片传到图床上，然后用图床提供的链接来访问并获取图片。这个方式不仅可以减少 <code>markdown</code> 文档，还可以节省站点的流量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;先来说说markdown&quot;&gt;&lt;a href=&quot;#先来说说markdown&quot; class=&quot;headerlink&quot; title=&quot;先来说说markdown&quot;&gt;&lt;/a&gt;先来说说 markdown&lt;/h1&gt;&lt;p&gt;我不喜欢用富文本工具来写东西。因为不懂地方使用的富文本编辑</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="blog" scheme="https://blog.natsuu.top/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>（Autojs）一键打卡脚本</title>
    <link href="https://blog.natsuu.top/2022/07/14/%E4%B8%80%E9%94%AE%E6%89%93%E5%8D%A1%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.natsuu.top/2022/07/14/%E4%B8%80%E9%94%AE%E6%89%93%E5%8D%A1%E8%84%9A%E6%9C%AC/</id>
    <published>2022-07-14T07:00:18.000Z</published>
    <updated>2024-04-06T04:08:23.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前提概要"><a href="#前提概要" class="headerlink" title="前提概要"></a>前提概要</h1><p><strong>Auto-Daily-Clock</strong> 是 <a href="https://github.com/JiyeHoo">JiyeHoo</a> 学长发起的，通过 <code>auto.js</code> 实现每日钉钉打卡的脚本。因为脚本的更新状况已经落后于钉钉数个版本，所以部分控件实例已无法正常识别。另一方面，由于学长本人现已从学校毕业，不方便继续维护这个项目。于是我决定 <em>暂时接手</em> 推进项目的维护工作。</p><p><a href="https://github.com/kkevsekk1/AutoX"><strong>AutoX</strong></a> 是一个基于 <a href="https://github.com/hyb1996/Auto.js">auto.js</a> 的开源项目，它同样是一个支持无障碍服务的 Android 平台上的 JavaScript IDE，其发展目标是 JsBox 和 Workflow。使用该项目需要同时遵守 <a href="https://opensource.org/licenses/GPL-2.0">GPL-V2</a> 和 <a href="https://www.mozilla.org/MPL/2.0">MPL-2</a></p><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><p><code>auto.js</code> 原作者现已停止对开源版本的维护工作，而付费版本的售价对于一个业余爱好者来说并不便宜，加上最后获取开源版本的打包插件方式对于新手来说并不友好，便放弃了这个平台。毕竟为了一个脚本去编译旧版 IDE，确实过于繁琐了。 <del>（这个夏宇就是菜啦）</del></p><p>所以我选用了基于 <code>auto.js</code> 开发的 <code>AutoX</code> 作为继续维护的平台。主要原因有以下两点：</p><ol><li>支持旧版 <code>auto.js</code> 原有的基础函数，兼容性较好。</li><li><code>AutoX</code> 作开发仍在推进的开源项目，后续更方便维护安全，且安全具有保障</li></ol><h1 id="改进路线"><a href="#改进路线" class="headerlink" title="改进路线"></a>改进路线</h1><p>原项目中使用 <code>toast</code> 事件来打印消息，这样不利于排查出现问题的原因，所以改用 <code>log()</code> 来集中打印日志信息。经过逐步调试可以发现，原本预定识别控件的样式都发生了变化，有的部分甚至已经无法识别当前所处的位置界面。 <del>可以直接准备全部重构了。</del></p><h2 id="添加界面识别"><a href="#添加界面识别" class="headerlink" title="添加界面识别"></a>添加界面识别</h2><p>在钉钉版本更新后，底部 Tab 栏的<code>工作台</code>按钮的图标会在<code>校徽</code>和 “钉钉原有样式” 之间变换。那么我们就不要去管它具体变成什么，只要通过其他方式确定页面已经正确加载再直接盲点即可。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">className</span>(<span class="string">"android.widget.ListView"</span>).<span class="title function_">findOne</span>();</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">3000</span>);</span><br><span class="line"><span class="keyword">var</span> mWidth = device.<span class="property">width</span> / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> mHeight = device.<span class="property">height</span> - <span class="number">150</span>;</span><br><span class="line"><span class="title function_">click</span>(mWidth, mHeight);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">500</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="点击指定控件"><a href="#点击指定控件" class="headerlink" title="点击指定控件"></a>点击指定控件</h2><p>通过 <code>AutoX</code> 自带的界面分析工具我们可以得知，填写打卡信息的页面中，获取定位一栏处，<code>text("获取")</code> 对应控件以及其父级并不具备<code>点击</code>事件，所以改为获取控件坐标，然后尝试点击控件中心的位置。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hq = <span class="title function_">className</span>(<span class="string">"android.view.View"</span>).<span class="title function_">text</span>(<span class="string">"获取"</span>).<span class="title function_">findOne</span>();</span><br><span class="line">    <span class="keyword">if</span> (hq) {</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">"开始获取定位"</span>);</span><br><span class="line">        <span class="title function_">click</span>(hq.<span class="title function_">bounds</span>().<span class="title function_">centerX</span>(), hq.<span class="title function_">bounds</span>().<span class="title function_">centerY</span>());</span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">"自动获取定位"</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>紧接着是最后的提交，因为钉钉版本更新后该按钮也无法获取，所以要用 <code>gesture</code> 滑倒最下面，进行盲点。这里可以看到原作的旧版本就是这样处理的，那么就把现有的代码注释掉，把注释代码前的注释符删掉就大功告成了。</p><h2 id="加个GUI"><a href="#加个GUI" class="headerlink" title="加个GUI"></a>加个 GUI</h2><p>为了方便其他人使用或进一步了解这个项目，给启动界面做了个简单的 GUI</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ui"</span>;</span><br><span class="line">events.<span class="title function_">observeKey</span>();</span><br><span class="line">events.<span class="title function_">onKeyDown</span>(<span class="string">"volume_down"</span>,<span class="keyword">function</span>(<span class="params">event</span>){</span><br><span class="line">            threads.<span class="title function_">shutDownAll</span>();</span><br><span class="line">        });</span><br><span class="line">ui.<span class="title function_">layout</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">vertical</span> <span class="attr">gravity</span>=<span class="string">"center_vertical"</span> <span class="attr">padding</span>=<span class="string">"16"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span> <span class="attr">textSize</span>=<span class="string">"27sp"</span> <span class="attr">textStyle</span>=<span class="string">"bold"</span> <span class="attr">lines</span>=<span class="string">"3"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        欢迎使用AutoDailyClock</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span> <span class="attr">textStyle</span>=<span class="string">"bold"</span> <span class="attr">textColor</span>=<span class="string">"red"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        本程序只适用于正常的健康日常打卡。如果身体发生异常状况请立即停止使用本程序，并及时向辅导员或其他负责人报告身体状况！</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"startButton"</span>  <span class="attr">text</span>=<span class="string">"开始打卡"</span> <span class="attr">style</span>=<span class="string">"Widget.AppCompat.Button.Colored"</span> <span class="attr">w</span>=<span class="string">"*"</span>  <span class="attr">h</span>=<span class="string">"70"</span> <span class="attr">margin</span>=<span class="string">"20"</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"checkButton"</span> <span class="attr">text</span>=<span class="string">"检测权限"</span> <span class="attr">style</span>=<span class="string">"Widget.AppCompat.Button.Colored"</span> <span class="attr">w</span>=<span class="string">"*"</span> <span class="attr">h</span>=<span class="string">"70"</span> <span class="attr">margin</span>=<span class="string">"20"</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        使用本应用需要启用的权限：</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        悬浮窗口、无障碍功能</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span> <span class="attr">textColor</span>=<span class="string">"red"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        1.AutoDailyClock-GUT是一个开源项目，它是免费的。</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">margin</span>=<span class="string">"8"</span> <span class="attr">lines</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        2.本项目的源代码是公开的。如果对软件内容存在质疑，欢迎前往github下载源码。</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">marginBottom</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        反馈及咨询：natsukawa247@outlook.com</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">marginBottom</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        项目地址：</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">marginBottom</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        https://github.com/NtskwK/AutoDailyClock-GUT</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">marginBottom</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        Autojs相关文档:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">marginBottom</span>=<span class="string">"5"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        https://pro.autojs.org/</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">vertical</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><del>不会用 javascript 画，所以随便找了个有 GUI 的脚本依葫芦画瓢给搬了过来。</del> 总之，得把注意事项给写上，滥用工具还出事了的话，我可不背锅。</p><h2 id="细枝末节"><a href="#细枝末节" class="headerlink" title="细枝末节"></a>细枝末节</h2><p>减少 <code>sleep()</code> 的时间，并在 <code>findOne()</code> 中补上  延时等待。这样可以同时防止手机性能太差页面加载赶不上脚本执行速度，和点击过快<br>会导致卡住的问题。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">className</span>(<span class="string">"android.widget.ListView"</span>).<span class="title function_">findOne</span>(<span class="number">3000</span>);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">500</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="可有可无"><a href="#可有可无" class="headerlink" title="可有可无"></a>可有可无</h2><p>专门单独写了个函数来报错 <del>（异常越处理越多，干脆不要处理好了）</del></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">end</span>(<span class="params">step</span>){</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">"无法"</span> + step);</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">"请手动完成本次工作"</span>);</span><br><span class="line">    <span class="title function_">toast</span>(<span class="string">"任务失败！详情请看日志内容"</span>);</span><br><span class="line">    <span class="title function_">exit</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="完事后话"><a href="#完事后话" class="headerlink" title="完事后话"></a>完事后话</h1><p><code>Auto-Daily-Clock</code> 是这个项目一开始的名称，现更名为 <a href="https://github.com/NtskwK/AutoDailyClock-GUT"><strong>AutoDailyClock-GUT</strong></a> 是为了防止和其他项目产生冲突 <del>（但是我完全不想用 AutoDailyDingClockGUT 这种太长的名字）</del>正如前文所说，我<strong>不保证</strong>会对它进行长期维护。一方面是相信这片人才辈出的天地一定后继有人，另一方面是希望持续已久的疫情早日解除。</p><p>最后，<code>AutoDailyClock-GUT</code> 作为我的第一个 auto.js (AutoX) 项目给我带来了前所未有的经验，同时，它也作为我博客里完成的第一篇正文，纪念我开始迷茫的那段时光。</p><div class="hide-block"><button type="button" class="hide-button" style="">随时可能会被删掉的碎碎念    </button><div class="hide-content"><p>我在不会用 git 的时候一套骚操作把更新 push 到上游去了，结果还合并成功了。我为什么不直接原地开 release 重新开版本号啊。这样混不到 Star 了啊（；´д｀）ゞ</p></div></div><p>相关链接：</p><p>Hoo の小窝：<a href="http://blog.jiyehoo.com:81/index.php/archives/288/">http://blog.jiyehoo.com:81/index.php/archives/288/</a></p><p>项目地址：<a href="https://github.com/NtskwK/AutoDailyClock-GUT">https://github.com/NtskwK/AutoDailyClock-GUT</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前提概要&quot;&gt;&lt;a href=&quot;#前提概要&quot; class=&quot;headerlink&quot; title=&quot;前提概要&quot;&gt;&lt;/a&gt;前提概要&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Auto-Daily-Clock&lt;/strong&gt; 是 &lt;a href=&quot;https://github.co</summary>
      
    
    
    
    <category term="实践" scheme="https://blog.natsuu.top/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="实践" scheme="https://blog.natsuu.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="补档" scheme="https://blog.natsuu.top/tags/%E8%A1%A5%E6%A1%A3/"/>
    
    <category term="Auto.js" scheme="https://blog.natsuu.top/tags/Auto-js/"/>
    
  </entry>
  
</feed>
